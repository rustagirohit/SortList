USE [MCRT_DS]
GO
/****** Object:  StoredProcedure [dbo].[AutoExtractKIPerformancesForRAS]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[AutoExtractKIPerformancesForRAS] --- AutoExtractKIPerformancesForRAS @WeekKey='20170605',@CreatedBy='FM/rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
BEGIN
if(len(Isnull(@WeekKey,''))>0 and len(Isnull(@CreatedBy,''))>0)
BEGIN
EXEC ExtractPerformanceFor_ITR_DR @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_ITR_Governance_Gel @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_ITR_Governance_CIA @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_ITR_EOL_HW @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_ITS_AVL_OVL @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_ITS_AVL_App_Tier @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_ITS_AVL_App_NWM @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_ITS_AVL_App_CIA @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_ITS_Prblm_KI_RecordsOpen_30days @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_ITS_Prblm_KI_RecordsNoSolution_60days @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_ITS_Prblm_KI_RecordsNotClosed_90days @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_ITS_Incidents_Root @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_CHNG_ChngMgmt_Success @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_CHNG_AdhrChngPOL @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_People_Attrition_AbsenceRate @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_People_CRF_Roles @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_People_CRF_CoreSkills @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_CHNG_PM_Milestones_Red @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_CHNG_PM_Milestones_RedAmber @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_INFO_DS_DLP @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_TOHR_Open_Issues_Major @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_TOHR_Open_Issues_Significant @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_TOHR_Open_Issues_ExtDueDate_Major @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_TOHR_Open_Issues_ExtDueDate_Significant @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_TOHR_Open_Issues_PastDues_Major @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_TOHR_Open_Issues_PastDues_Significant @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_CHNG_PM_PMRisks @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_CHNG_PM_PMIssues @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_OS_Contract_Gov_P2PVendorOS_NoOfInvoices @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_OS_Contract_Gov_P2PVendorOS_ValueOfInvoices @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_OS_Contract_Gov_P2PVendorOS_UnApproved_NoOfInvoices @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_OS_Contract_Gov_P2PVendorOS_UnApproved_ValueOfInvoices @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_OS_Contract_Gov_Adhr_ServiceLevelExpectations @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_OS_Contract_Gov_ContractOwnerNotAssigned @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_OS_Contract_Gov_ContractsOverDueForRenewal @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_OS_Contract_Gov_SIA @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_INFO_TVM_Phishing @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
EXEC ExtractPerformanceFor_People_CRF_Vacancies @WeekKey=@WeekKey,@CreatedBy=@CreatedBy ;
END
ELSE
BEGIN
Print 'Week Key and User RACF Required.';
END
END

GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_CHNG_AdhrChngPOL]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Proc [dbo].[ExtractPerformanceFor_CHNG_AdhrChngPOL] -- [ExtractPerformanceFor_CHNG_AdhrChngPOL] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(*) from vCHNG_AdhrChngPOL';
	  SET @PerformanceSQL = 'select @NmCount=count(*) from vCHNG_AdhrChngPOL'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,TM.Metric,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_CHNG_AdhrChngPOL
from mcrt..tblRASMetrics RM
join mcrt..tblMetrics TM 
on RM.MetricId=TM.ContentId
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=5
and RM.RiskThemeId=22 and
RM.MetricId in (73,74,75,76,77);

Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_CHNG_AdhrChngPOL;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @MetricName nvarchar(512),
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @MetricName=Metric,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='lower(ltrim(rtrim([Provision Compliance])))=''compliant'' ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_CHNG_AdhrChngPOL where 
		 RowId=@Iterator;

		 
if(len(Isnull(@MetricName,''))>0)
Begin



---Filter For KI / Metric Name

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and lower(LTRIM(RTRIM([Provision Name])))=''' + Isnull(@MetricName,'') + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' lower(LTRIM(RTRIM([Provision Name])))=''' + Isnull(@MetricName,'') + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and lower(LTRIM(RTRIM([Provision Name])))=''' + Isnull(@MetricName,'') + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' lower(LTRIM(RTRIM([Provision Name])))=''' + Isnull(@MetricName,'') + '''';
		 end

		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorCount * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END



	
end
	
		 Set @Iterator = @Iterator + 1;


END


Drop table #temp_CHNG_AdhrChngPOL;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_CHNG_ChngMgmt_Success]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_CHNG_ChngMgmt_Success] -- [ExtractPerformanceFor_CHNG_ChngMgmt_Success] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(*) from vCHNG_ChngMgmt_Success';
	  SET @PerformanceSQL = 'select @NmCount=count(*) from vCHNG_ChngMgmt_Success'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_CHNG_ChngMgmt_Success
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=5
and RM.RiskThemeId=21 and
RM.MetricId in (78);

Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_CHNG_ChngMgmt_Success;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='lower(ltrim(rtrim([Change Close Code])))=''successful'' ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_CHNG_ChngMgmt_Success where 
		 RowId=@Iterator;

		 

		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorCount * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END


	

	
		 Set @Iterator = @Iterator + 1;


END


Drop table #temp_CHNG_ChngMgmt_Success;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END

GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_CHNG_PM_Milestones_Red]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_CHNG_PM_Milestones_Red] -- [ExtractPerformanceFor_CHNG_PM_Milestones_Red] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(*) from vCHNG_PM_Milestones';
	  SET @PerformanceSQL = 'select @NmCount=count(*) from vCHNG_PM_Milestones'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_CHNG_PM_Milestones_Red
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=5
and RM.RiskThemeId=23 and
RM.MetricId in (1131);


Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_CHNG_PM_Milestones_Red;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='lower(ltrim(rtrim([RAG])))=''red'' ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_CHNG_PM_Milestones_Red where 
		 RowId=@Iterator;

		 


		---ZoneContext
		--if(@ZoneContextId >0)
		-- BEGIN

		-- ---Region
		-- if(@ZoneContextId = 1 and @RegionId>0)
		-- BEGIN

		-- if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		-- begin
		-- SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		-- end
		-- else
		-- begin
		-- SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		-- end


		-- if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		-- begin		
		-- SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		-- end
		-- else
		-- begin
		-- SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		-- end


		
		-- END

		--  ---SLT
		-- Else if(@ZoneContextId = 2 and @SLTId>0)
		-- BEGIN

		-- if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		-- begin
		-- SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		-- end
		-- else
		-- begin
		-- SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		-- end


		-- if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		-- begin		
		-- SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		-- end
		-- else
		-- begin
		-- SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		-- end	

		-- END

		-- END

	


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorCount * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END


	

	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_CHNG_PM_Milestones_Red;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_CHNG_PM_Milestones_RedAmber]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Proc [dbo].[ExtractPerformanceFor_CHNG_PM_Milestones_RedAmber] -- [ExtractPerformanceFor_CHNG_PM_Milestones_RedAmber] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(*) from vCHNG_PM_Milestones';
	  SET @PerformanceSQL = 'select @NmCount=count(*) from vCHNG_PM_Milestones'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_CHNG_PM_Milestones_RedAmber
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=5
and RM.RiskThemeId=23 and
RM.MetricId in (1133);


Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_CHNG_PM_Milestones_RedAmber;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='lower(ltrim(rtrim([RAG])))=''red'' or lower(ltrim(rtrim([RAG])))=''amber'' ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_CHNG_PM_Milestones_RedAmber where 
		 RowId=@Iterator;

		 


		---ZoneContext
		--if(@ZoneContextId >0)
		-- BEGIN

		-- ---Region
		-- if(@ZoneContextId = 1 and @RegionId>0)
		-- BEGIN

		-- if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		-- begin
		-- SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		-- end
		-- else
		-- begin
		-- SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		-- end


		-- if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		-- begin		
		-- SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		-- end
		-- else
		-- begin
		-- SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		-- end


		
		-- END

		--  ---SLT
		-- Else if(@ZoneContextId = 2 and @SLTId>0)
		-- BEGIN

		-- if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		-- begin
		-- SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		-- end
		-- else
		-- begin
		-- SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		-- end


		-- if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		-- begin		
		-- SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		-- end
		-- else
		-- begin
		-- SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		-- end	

		-- END

		-- END

	


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorCount * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END


	

	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_CHNG_PM_Milestones_RedAmber;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_CHNG_PM_PMIssues]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_CHNG_PM_PMIssues] -- [ExtractPerformanceFor_CHNG_PM_PMIssues] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(*) from vCHNG_PM_PMIssues';
	  SET @PerformanceSQL = 'select @NmCount=count(*) from vCHNG_PM_PMIssues'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_CHNG_PM_PMIssues
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=5
and RM.RiskThemeId=23 and
RM.MetricId in (1135);


Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_CHNG_PM_PMIssues;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='[Target Closure Date] < convert(varchar(10),GETUTCDATE(),126) ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_CHNG_PM_PMIssues where 
		 RowId=@Iterator;

		 


		---ZoneContext
		--if(@ZoneContextId >0)
		-- BEGIN

		-- ---Region
		-- if(@ZoneContextId = 1 and @RegionId>0)
		-- BEGIN

		-- if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		-- begin
		-- SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		-- end
		-- else
		-- begin
		-- SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		-- end


		-- if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		-- begin		
		-- SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		-- end
		-- else
		-- begin
		-- SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		-- end


		
		-- END

		--  ---SLT
		-- Else if(@ZoneContextId = 2 and @SLTId>0)
		-- BEGIN

		-- if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		-- begin
		-- SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		-- end
		-- else
		-- begin
		-- SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		-- end


		-- if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		-- begin		
		-- SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		-- end
		-- else
		-- begin
		-- SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		-- end	

		-- END

		-- END

	


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorCount * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END


	

	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_CHNG_PM_PMIssues;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END

GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_CHNG_PM_PMRisks]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_CHNG_PM_PMRisks] -- [ExtractPerformanceFor_CHNG_PM_PMRisks] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(*) from vCHNG_PM_PMRisks';
	  SET @PerformanceSQL = 'select @NmCount=count(*) from vCHNG_PM_PMRisks'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_CHNG_PM_PMRisks
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=5
and RM.RiskThemeId=23 and
RM.MetricId in (1134);


Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_CHNG_PM_PMRisks;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='[Target Closure Date] < convert(varchar(10),GETUTCDATE(),126) ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_CHNG_PM_PMRisks where 
		 RowId=@Iterator;

		 


		---ZoneContext
		--if(@ZoneContextId >0)
		-- BEGIN

		-- ---Region
		-- if(@ZoneContextId = 1 and @RegionId>0)
		-- BEGIN

		-- if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		-- begin
		-- SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		-- end
		-- else
		-- begin
		-- SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		-- end


		-- if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		-- begin		
		-- SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		-- end
		-- else
		-- begin
		-- SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		-- end


		
		-- END

		--  ---SLT
		-- Else if(@ZoneContextId = 2 and @SLTId>0)
		-- BEGIN

		-- if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		-- begin
		-- SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		-- end
		-- else
		-- begin
		-- SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		-- end


		-- if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		-- begin		
		-- SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		-- end
		-- else
		-- begin
		-- SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		-- end	

		-- END

		-- END

	


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorCount * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END


	

	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_CHNG_PM_PMRisks;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_INFO_DS_DLP]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_INFO_DS_DLP] -- [ExtractPerformanceFor_INFO_DS_DLP] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
   
	  SET @PerformanceSQL = 'select @Count=count(*) from vINFO_DS_DLP'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId 
into #temp_vINFO_DS_DLP
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=1
and RM.RiskThemeId=9 and
RM.MetricId in (30);

Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_vINFO_DS_DLP;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@NumeratorSQL nvarchar(max),
		 @PerformanceInfo varchar(128),
		 @NumeratorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='lower(ltrim(rtrim([Status]))) in (''issue'',''incident'') ',
		@NumeratorSQL='',@NumeratorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_vINFO_DS_DLP where 
		 RowId=@Iterator;

		 
	

		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end
		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

	
	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
	     Print @NumeratorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@Count int OUTPUT', @Count=@NumeratorCount OUTPUT;
		
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		 SET @InputPerformanceValue= @NumeratorCount;

		  print @InputPerformanceValue;
	

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END




	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_vINFO_DS_DLP;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_INFO_TVM_Phishing]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_INFO_TVM_Phishing] -- [ExtractPerformanceFor_INFO_TVM_Phishing] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN
Select * into #tempvINFO_TVM_Phishing
from vINFO_TVM_Phishing;

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(distinct [EmployeeId]) from #tempvINFO_TVM_Phishing';
	  SET @PerformanceSQL = 'select @NmCount=count(distinct [EmployeeId]) from #tempvINFO_TVM_Phishing'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_INFO_TVM_Phishing
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=1
and RM.RiskThemeId=5 and
RM.MetricId in (1136);


Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_INFO_TVM_Phishing;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='lower(ltrim(rtrim([PhishingTestStatus])))=''failed'' ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_INFO_TVM_Phishing where 
		 RowId=@Iterator;

		 


		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

	


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast((@NumeratorCount) as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= ((@NumeratorCount) * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END


	

	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_INFO_TVM_Phishing;
Drop table #tempvINFO_TVM_Phishing;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_ITR_DR]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_ITR_DR] -- ExtractPerformanceFor_ITR_DR '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(distinct CatalogueId) from vITR_DR';
	  SET @PerformanceSQL = 'select @NmCount=count(distinct CatalogueId) from vITR_DR'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_ITR_DR
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=2
and RM.RiskThemeId=12 and
RM.MetricId in (87,88);

Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_ITR_DR;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='lower(ltrim(rtrim([Out of Governance])))=''yes'' ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_ITR_DR where 
		 RowId=@Iterator;

		 
		
		if(@TierId>0)
		BEGIN

		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

		 ---Tier Filtering

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Tier=''' + cast(@TierId as varchar(50)) + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Tier=''' + cast(@TierId as varchar(50)) + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Tier=''' + cast(@TierId as varchar(50)) + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Tier=''' + cast(@TierId as varchar(50)) + '''';
		 end	


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorCount * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END


		END

	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_ITR_DR;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_ITR_EOL_HW]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_ITR_EOL_HW] -- ExtractPerformanceFor_ITR_EOL_HW '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(distinct CatalogueId) from vITR_EOL_HW';
	  SET @PerformanceSQL = 'select @NmCount=count(distinct CatalogueId) from vITR_EOL_HW'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_ITR_EOL_HW
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=2
and RM.RiskThemeId=14 and
RM.MetricId in (82,129);

Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_ITR_EOL_HW;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='lower(ltrim(rtrim([IsEndOfLifeBeyondAppetite])))=''yes'' ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_ITR_EOL_HW where 
		 RowId=@Iterator;

		 
		
		if(@TierId>0)
		BEGIN

		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

		 ---Tier Filtering

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Tier=''' + cast(@TierId as varchar(50)) + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Tier=''' + cast(@TierId as varchar(50)) + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Tier=''' + cast(@TierId as varchar(50)) + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Tier=''' + cast(@TierId as varchar(50)) + '''';
		 end	


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorCount * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END


		END

	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_ITR_EOL_HW;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_ITR_Governance_CIA]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Proc [dbo].[ExtractPerformanceFor_ITR_Governance_CIA] -- ExtractPerformanceFor_ITR_Governance_CIA '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(distinct CatalogueId) from vITR_Governance_CIA';
	  SET @PerformanceSQL = 'select @NmCount=count(distinct CatalogueId) from vITR_Governance_CIA'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_ITR_Governance_CIA
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=2
and RM.RiskThemeId=13 and
RM.MetricId in (81);

Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_ITR_Governance_CIA;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='lower(ltrim(rtrim([Compliant])))=''no'' ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_ITR_Governance_CIA where 
		 RowId=@Iterator;

		 
		


		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

	


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorCount * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END




	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_ITR_Governance_CIA;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END

GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_ITR_Governance_Gel]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Proc [dbo].[ExtractPerformanceFor_ITR_Governance_Gel] -- ExtractPerformanceFor_ITR_Governance_Gel '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(distinct CatalogueId) from vITR_Governance_GEL';
	  SET @PerformanceSQL = 'select @NmCount=count(distinct CatalogueId) from vITR_Governance_GEL'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_ITR_Governance_GEL
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=2
and RM.RiskThemeId=13 and
RM.MetricId in (84,85);

Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_ITR_Governance_GEL;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='lower(ltrim(rtrim([Gel Sign Off Status])))=''expired'' ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_ITR_Governance_GEL where 
		 RowId=@Iterator;

		 
		
		if(@TierId>0)
		BEGIN

		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

		 ---Tier Filtering

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Tier=''' + cast(@TierId as varchar(50)) + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Tier=''' + cast(@TierId as varchar(50)) + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Tier=''' + cast(@TierId as varchar(50)) + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Tier=''' + cast(@TierId as varchar(50)) + '''';
		 end	


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorCount * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END


		END

	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_ITR_Governance_GEL;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_ITS_AVL_App_CIA]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_ITS_AVL_App_CIA] -- [ExtractPerformanceFor_ITS_AVL_App_CIA] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

	  Select * into #tempDataSet from vITS_AVL_App
	  where Isnull(IsCIA_A_1,0)=1;

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(distinct CatalogueId) from #tempDataSet';
	  SET @PerformanceSQL = 'select @NmCount=count(distinct CatalogueId) from #tempDataSet'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId 
into #temp_ITS_AVL_App_CIA
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=3
and RM.RiskThemeId=15 and
RM.MetricId in (62);

Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_ITS_AVL_App_CIA;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='[AppAvailability_%] < 99.95 ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_ITS_AVL_App_CIA where 
		 RowId=@Iterator;

		 
	

		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

		


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorCount * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END




	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_ITS_AVL_App_CIA;

Drop table #tempDataSet;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_ITS_AVL_App_NWM]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_ITS_AVL_App_NWM] -- [ExtractPerformanceFor_ITS_AVL_App_NWM] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(distinct CatalogueId) from vITS_AVL_App';
	  SET @PerformanceSQL = 'select @NmCount=count(distinct CatalogueId) from vITS_AVL_App'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId 
into #temp_ITS_AVL_App_NWM
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=3
and RM.RiskThemeId=15 and
RM.MetricId in (62);

Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_ITS_AVL_App_NWM;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='[AppAvailability_%] < 99.95 ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_ITS_AVL_App_NWM where 
		 RowId=@Iterator;

		 
	

		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

		


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorCount * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END




	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_ITS_AVL_App_NWM;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_ITS_AVL_App_Tier]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Proc [dbo].[ExtractPerformanceFor_ITS_AVL_App_Tier] -- [ExtractPerformanceFor_ITS_AVL_App_Tier] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(distinct CatalogueId) from vITS_AVL_App_Tier';
	  SET @PerformanceSQL = 'select @NmCount=count(distinct CatalogueId) from vITS_AVL_App_Tier'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId 
into #temp_ITS_AVL_App_Tier
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=3
and RM.RiskThemeId=15 and
RM.MetricId in (64,65);

Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_ITS_AVL_App_Tier;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='[AppAvailability_%] < 99.95 ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_ITS_AVL_App_Tier where 
		 RowId=@Iterator;

		 
		
		if(@TierId>0)
		BEGIN

		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

		 ---Tier Filtering

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Tier=''' + cast(@TierId as varchar(50)) + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Tier=''' + cast(@TierId as varchar(50)) + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Tier=''' + cast(@TierId as varchar(50)) + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Tier=''' + cast(@TierId as varchar(50)) + '''';
		 end	


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorCount * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END


		END

	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_ITS_AVL_App_Tier;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_ITS_AVL_OVL]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_ITS_AVL_OVL] -- ExtractPerformanceFor_ITS_AVL_OVL '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN
----Get Total Duration For Availability Per App as per No of Working Days Arithmetic
Declare @TotalDurationForAvailabilityPerApp int;
 SET @TotalDurationForAvailabilityPerApp=(select TotalDurationForAvailabilityPerApp from vTotalAvailabilityDurationPerApp);

 -------------------------------------------------------------------------------------



DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnVal=count(distinct CatalogueId) from vITS_AVL_OVL';
	  SET @PerformanceSQL = 'select @NmVal=SUM([Weighted Impact]) from vITS_AVL_OVL'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_ITS_AVL_OVL
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=3
and RM.RiskThemeId=15 and
RM.MetricId in (60);

Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_ITS_AVL_OVL;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorValue float,@DenominatorValue int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorValue=0,@DenominatorValue=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_ITS_AVL_OVL where 
		 RowId=@Iterator;

		 
		


		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

	


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmVal float OUTPUT', @NmVal=@NumeratorValue OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnVal int OUTPUT', @DnVal=@DenominatorValue OUTPUT
		  
		  SET @PerformanceInfo = null;

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorValue>0)
		  begin
		  SET @InputPerformanceValue= (1-((@NumeratorValue)/(@DenominatorValue * @TotalDurationForAvailabilityPerApp)))* 100 * 1.00;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END




	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_ITS_AVL_OVL;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_ITS_Incidents_Root]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_ITS_Incidents_Root] -- [ExtractPerformanceFor_ITS_Incidents_Root] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
   
	  SET @PerformanceSQL = 'select @Count=count(*) from vITS_Incidents_Root'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId 
into #temp_ITS_Incidents_Root
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=3
and RM.RiskThemeId=16 and
RM.MetricId in (59);

Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_ITS_Incidents_Root;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@NumeratorSQL nvarchar(max),
		 @PerformanceInfo varchar(128),
		 @NumeratorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='',
		@NumeratorSQL='',@NumeratorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_ITS_Incidents_Root where 
		 RowId=@Iterator;

		 
	

		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end
		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

	
	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
	     Print @NumeratorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@Count int OUTPUT', @Count=@NumeratorCount OUTPUT;
		
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/12)';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		 SET @InputPerformanceValue= ROUND(@NumeratorCount * 1.00/12,0);

		  print @InputPerformanceValue;
	

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END




	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_ITS_Incidents_Root;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_ITS_Prblm_KI_RecordsNoSolution_60days]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Proc [dbo].[ExtractPerformanceFor_ITS_Prblm_KI_RecordsNoSolution_60days] -- [ExtractPerformanceFor_ITS_Prblm_KI_RecordsNoSolution_60days] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(CatalogueId) from vITS_Prblm_KI_RecordsNoSolution_60days';
	  SET @PerformanceSQL = 'select @NmCount=count(CatalogueId) from vITS_Prblm_KI_RecordsNoSolution_60days'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId 
into #temp_ITS_Prblm_KI_RecordsNoSolution_60days
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=3
and RM.RiskThemeId=17 and
RM.MetricId in (55);

Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_ITS_Prblm_KI_RecordsNoSolution_60days;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='[Days Taken For Solution] > 60 ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_ITS_Prblm_KI_RecordsNoSolution_60days where 
		 RowId=@Iterator;

		 
	

		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

		


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorCount * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end
		  
		  SET @NoOfRecords=@DenominatorCount;

		  print @InputPerformanceValue;
		  Print @NoOfRecords;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END




	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_ITS_Prblm_KI_RecordsNoSolution_60days;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_ITS_Prblm_KI_RecordsNotClosed_90days]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_ITS_Prblm_KI_RecordsNotClosed_90days] -- [ExtractPerformanceFor_ITS_Prblm_KI_RecordsNotClosed_90days] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
   
	  SET @PerformanceSQL = 'select @Count=count(*) from vITS_Prblm_KI_RecordsNotClosed_90days'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId 
into #temp_ITS_Prblm_KI_RecordsNotClosed_90days
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=3
and RM.RiskThemeId=17 and
RM.MetricId in (57);

Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_ITS_Prblm_KI_RecordsNotClosed_90days;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@NumeratorSQL nvarchar(max),
		 @PerformanceInfo varchar(128),
		 @NumeratorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='',
		@NumeratorSQL='',@NumeratorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_ITS_Prblm_KI_RecordsNotClosed_90days where 
		 RowId=@Iterator;

		 
	

		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end
		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

	
	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
	     Print @NumeratorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@Count int OUTPUT', @Count=@NumeratorCount OUTPUT;
		
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		 SET @InputPerformanceValue= cast(@NumeratorCount as float);

		  print @InputPerformanceValue;
	

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END




	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_ITS_Prblm_KI_RecordsNotClosed_90days;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_ITS_Prblm_KI_RecordsOpen_30days]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_ITS_Prblm_KI_RecordsOpen_30days] -- [ExtractPerformanceFor_ITS_Prblm_KI_RecordsOpen_30days] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(CatalogueId) from vITS_Prblm_KI_RecordsOpen_30days';
	  SET @PerformanceSQL = 'select @NmCount=count(CatalogueId) from vITS_Prblm_KI_RecordsOpen_30days'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId 
into #temp_ITS_Prblm_KI_RecordsOpen_30days
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=3
and RM.RiskThemeId=17 and
RM.MetricId in (56);

Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_ITS_Prblm_KI_RecordsOpen_30days;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='Isnull([Has Root Cause Been Identified],'''') in (''No'','''','' '') ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_ITS_Prblm_KI_RecordsOpen_30days where 
		 RowId=@Iterator;

		 
	

		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

		


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorCount * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end
		  
		  SET @NoOfRecords=@DenominatorCount;

		  print @InputPerformanceValue;
		  Print @NoOfRecords;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END




	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_ITS_Prblm_KI_RecordsOpen_30days;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_OS_Contract_Gov_Adhr_ServiceLevelExpectations]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_OS_Contract_Gov_Adhr_ServiceLevelExpectations] -- [ExtractPerformanceFor_OS_Contract_Gov_Adhr_ServiceLevelExpectations] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(*) from vOS_Contract_Gov_Adhr_ServiceLevelExpectations';
	  SET @PerformanceSQL = 'select @NmCount=count(*) from vOS_Contract_Gov_Adhr_ServiceLevelExpectations'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,TM.Metric,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_OS_Contract_Gov_Adhr_ServiceLevelExpectations
from mcrt..tblRASMetrics RM
join mcrt..tblMetrics TM 
on RM.MetricId=TM.ContentId
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=6
and RM.RiskThemeId=13 and
RM.MetricId in (108);

Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_OS_Contract_Gov_Adhr_ServiceLevelExpectations;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @MetricName nvarchar(512),
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @MetricName=Metric,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='lower(ltrim(rtrim([Provision Compliance])))=''compliant'' ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_OS_Contract_Gov_Adhr_ServiceLevelExpectations where 
		 RowId=@Iterator;

		 
if(len(Isnull(@MetricName,''))>0)
Begin



---Filter For KI / Metric Name

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and lower(LTRIM(RTRIM([Provision Name])))=''' + Isnull(@MetricName,'') + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' lower(LTRIM(RTRIM([Provision Name])))=''' + Isnull(@MetricName,'') + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and lower(LTRIM(RTRIM([Provision Name])))=''' + Isnull(@MetricName,'') + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' lower(LTRIM(RTRIM([Provision Name])))=''' + Isnull(@MetricName,'') + '''';
		 end

		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorCount * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END



	
end
	
		 Set @Iterator = @Iterator + 1;


END


Drop table #temp_OS_Contract_Gov_Adhr_ServiceLevelExpectations;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END

GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_OS_Contract_Gov_ContractOwnerNotAssigned]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_OS_Contract_Gov_ContractOwnerNotAssigned] -- [ExtractPerformanceFor_OS_Contract_Gov_ContractOwnerNotAssigned] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    BEGIN TRY
      BEGIN TRAN
DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(*) from vOS_Contract_Gov_ContractOwnerNotAssigned';
	  SET @PerformanceSQL = 'select @NmCount=count(*) from vOS_Contract_Gov_ContractOwnerNotAssigned'	  
select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,TM.Metric,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_OS_Contract_Gov_ContractOwnerNotAssigned
from mcrt..tblRASMetrics RM
join mcrt..tblMetrics TM 
on RM.MetricId=TM.ContentId
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=6
and RM.RiskThemeId=13 and
RM.MetricId in (109);
Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_OS_Contract_Gov_ContractOwnerNotAssigned;
	  set @TotalRows=isnull(@TotalRows,0);
	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @MetricName nvarchar(512),
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;
		   WHILE (@Iterator <= @TotalRows)
BEGIN
select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @MetricName=Metric,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='lower(ltrim(rtrim([Compliance Status])))=''non compliant'' ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_OS_Contract_Gov_ContractOwnerNotAssigned where 
		 RowId=@Iterator;
		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN
		 ---Region
		 --if(@ZoneContextId = 1 and @RegionId>0)
		 --BEGIN
		 --if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 --begin
		 --SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 --end
		 --else
		 --begin
		 --SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 --end
		 --if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 --begin		
		 --SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 --end
		 --else
		 --begin
		 --SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 --end
		
		 --END

		  ---SLT
		 if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN
		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end
		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	
		 END

		 END
	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;
		  Print @NumeratorSQL;
		  Print @DenominatorSQL;
		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';
		  Print @RasMetricId;
		  Print @PerformanceInfo;
		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorCount * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end
		  print @InputPerformanceValue;
		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])
	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();
		  END
		  ELSE
		  BEGIN
		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
		  END
	
	
		 Set @Iterator = @Iterator + 1;
END
Drop table #temp_OS_Contract_Gov_ContractOwnerNotAssigned;
  COMMIT
    END TRY
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_OS_Contract_Gov_ContractsOverDueForRenewal]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_OS_Contract_Gov_ContractsOverDueForRenewal] -- [ExtractPerformanceFor_OS_Contract_Gov_ContractsOverDueForRenewal] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    BEGIN TRY
      BEGIN TRAN
DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(*) from vOS_Contract_Gov_ContractsOverDueForRenewal';
	  SET @PerformanceSQL = 'select @NmCount=count(*) from vOS_Contract_Gov_ContractsOverDueForRenewal'	  
select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,TM.Metric,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_OS_Contract_Gov_ContractsOverDueForRenewal
from mcrt..tblRASMetrics RM
join mcrt..tblMetrics TM 
on RM.MetricId=TM.ContentId
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=6
and RM.RiskThemeId=13 and
RM.MetricId in (110);
Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_OS_Contract_Gov_ContractsOverDueForRenewal;
	  set @TotalRows=isnull(@TotalRows,0);
	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @MetricName nvarchar(512),
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;
		   WHILE (@Iterator <= @TotalRows)
BEGIN
select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @MetricName=Metric,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='lower(ltrim(rtrim([Compliance Status])))=''non compliant'' ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_OS_Contract_Gov_ContractsOverDueForRenewal where 
		 RowId=@Iterator;
		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN
		 ---Region
		 --if(@ZoneContextId = 1 and @RegionId>0)
		 --BEGIN
		 --if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 --begin
		 --SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 --end
		 --else
		 --begin
		 --SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 --end
		 --if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 --begin		
		 --SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 --end
		 --else
		 --begin
		 --SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 --end
		
		 --END

		  ---SLT
		 if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN
		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end
		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	
		 END

		 END
	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;
		  Print @NumeratorSQL;
		  Print @DenominatorSQL;
		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';
		  Print @RasMetricId;
		  Print @PerformanceInfo;
		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorCount * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end
		  print @InputPerformanceValue;
		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])
	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();
		  END
		  ELSE
		  BEGIN
		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
		  END
	
	
		 Set @Iterator = @Iterator + 1;
END
Drop table #temp_OS_Contract_Gov_ContractsOverDueForRenewal;
  COMMIT
    END TRY
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_OS_Contract_Gov_P2PVendorOS_NoOfInvoices]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_OS_Contract_Gov_P2PVendorOS_NoOfInvoices] -- [ExtractPerformanceFor_OS_Contract_Gov_P2PVendorOS_NoOfInvoices] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnSum=Sum(Isnull([Records],0)) from vOS_Contract_Gov_P2PVendorOS ';
	  SET @PerformanceSQL = 'select @NmSum=Sum(Isnull([Records],0)) from vOS_Contract_Gov_P2PVendorOS '	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_OS_Contract_Gov_P2PVendorOS_NoOfInvoices
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=6
and RM.RiskThemeId=13 and
RM.MetricId in (103);


Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_OS_Contract_Gov_P2PVendorOS_NoOfInvoices;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorSum int,@DenominatorSum int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='[CompliantToP2P] in (''NON COMPLIANT'') ',
		 @DenominatorWhereSQL='[CompliantToP2P] in (''COMPLIANT'',''NON COMPLIANT'') ',
		 @NumeratorSQL='',@DenominatorSQL='',@NumeratorSum=0,@DenominatorSum=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_OS_Contract_Gov_P2PVendorOS_NoOfInvoices where 
		 RowId=@Iterator;

		 


		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

	


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmSum int OUTPUT', @NmSum=@NumeratorSum OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnSum int OUTPUT', @DnSum=@DenominatorSum OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorSum as varchar(50)) + '/' + cast(@DenominatorSum as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorSum>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorSum * 100 * 1.00)/@DenominatorSum;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END


	

	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_OS_Contract_Gov_P2PVendorOS_NoOfInvoices;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_OS_Contract_Gov_P2PVendorOS_UnApproved_NoOfInvoices]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_OS_Contract_Gov_P2PVendorOS_UnApproved_NoOfInvoices] -- [ExtractPerformanceFor_OS_Contract_Gov_P2PVendorOS_UnApproved_NoOfInvoices] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnSum=Sum(Isnull([Records],0)) from vOS_Contract_Gov_P2PVendorOS ';
	  SET @PerformanceSQL = 'select @NmSum=Sum(Isnull([Records],0)) from vOS_Contract_Gov_P2PVendorOS '	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_OS_Contract_Gov_P2PVendorOS_UnApproved_NoOfInvoices
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=6
and RM.RiskThemeId=13 and
RM.MetricId in (106);


Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_OS_Contract_Gov_P2PVendorOS_UnApproved_NoOfInvoices;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorSum int,@DenominatorSum int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='[CompliantToClass] in (''NON COMPLIANT'') ',
		 @DenominatorWhereSQL='[CompliantToClass] in (''COMPLIANT'',''NON COMPLIANT'') ',
		 @NumeratorSQL='',@DenominatorSQL='',@NumeratorSum=0,@DenominatorSum=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_OS_Contract_Gov_P2PVendorOS_UnApproved_NoOfInvoices where 
		 RowId=@Iterator;

		 


		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

	


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmSum int OUTPUT', @NmSum=@NumeratorSum OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnSum int OUTPUT', @DnSum=@DenominatorSum OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorSum as varchar(50)) + '/' + cast(@DenominatorSum as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorSum>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorSum * 100 * 1.00)/@DenominatorSum;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END


	

	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_OS_Contract_Gov_P2PVendorOS_UnApproved_NoOfInvoices;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_OS_Contract_Gov_P2PVendorOS_UnApproved_ValueOfInvoices]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_OS_Contract_Gov_P2PVendorOS_UnApproved_ValueOfInvoices] --[ExtractPerformanceFor_OS_Contract_Gov_P2PVendorOS_UnApproved_ValueOfInvoices] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnSum=Sum(Isnull([SumOfTotal],0)) from vOS_Contract_Gov_P2PVendorOS ';
	  SET @PerformanceSQL = 'select @NmSum=Sum(Isnull([SumOfTotal],0)) from vOS_Contract_Gov_P2PVendorOS '	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_OS_Contract_Gov_P2PVendorOS_UnApproved_ValueOfInvoices
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=6
and RM.RiskThemeId=13 and
RM.MetricId in (105);


Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_OS_Contract_Gov_P2PVendorOS_UnApproved_ValueOfInvoices;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorSum float,@DenominatorSum float,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='[CompliantToClass] in (''NON COMPLIANT'') ',
		 @DenominatorWhereSQL='[CompliantToClass] in (''COMPLIANT'',''NON COMPLIANT'') ',
		 @NumeratorSQL='',@DenominatorSQL='',@NumeratorSum=0,@DenominatorSum=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_OS_Contract_Gov_P2PVendorOS_UnApproved_ValueOfInvoices where 
		 RowId=@Iterator;

		 


		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

	


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmSum float OUTPUT', @NmSum=@NumeratorSum OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnSum float OUTPUT', @DnSum=@DenominatorSum OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorSum as varchar(50)) + '/' + cast(@DenominatorSum as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorSum>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorSum * 100 * 1.00)/@DenominatorSum;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END


	

	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_OS_Contract_Gov_P2PVendorOS_UnApproved_ValueOfInvoices;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_OS_Contract_Gov_P2PVendorOS_ValueOfInvoices]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_OS_Contract_Gov_P2PVendorOS_ValueOfInvoices] -- [ExtractPerformanceFor_OS_Contract_Gov_P2PVendorOS_ValueOfInvoices] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnSum=Sum(Isnull([SumOfTotal],0)) from vOS_Contract_Gov_P2PVendorOS ';
	  SET @PerformanceSQL = 'select @NmSum=Sum(Isnull([SumOfTotal],0)) from vOS_Contract_Gov_P2PVendorOS '	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_OS_Contract_Gov_P2PVendorOS_ValueOfInvoices
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=6
and RM.RiskThemeId=13 and
RM.MetricId in (104);


Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_OS_Contract_Gov_P2PVendorOS_ValueOfInvoices;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorSum float,@DenominatorSum float,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='[CompliantToP2P] in (''NON COMPLIANT'') ',
		 @DenominatorWhereSQL='[CompliantToP2P] in (''COMPLIANT'',''NON COMPLIANT'') ',
		 @NumeratorSQL='',@DenominatorSQL='',@NumeratorSum=0,@DenominatorSum=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_OS_Contract_Gov_P2PVendorOS_ValueOfInvoices where 
		 RowId=@Iterator;

		 


		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

	


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmSum float OUTPUT', @NmSum=@NumeratorSum OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnSum float OUTPUT', @DnSum=@DenominatorSum OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorSum as varchar(50)) + '/' + cast(@DenominatorSum as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorSum>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorSum * 100 * 1.00)/@DenominatorSum;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END


	

	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_OS_Contract_Gov_P2PVendorOS_ValueOfInvoices;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_OS_Contract_Gov_SIA]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_OS_Contract_Gov_SIA] -- [ExtractPerformanceFor_OS_Contract_Gov_ContractsOverDueForRenewal] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    BEGIN TRY
      BEGIN TRAN
DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(*) from vOS_Contract_Gov_SIA';
	  SET @PerformanceSQL = 'select @NmCount=count(*) from vOS_Contract_Gov_SIA'	  
select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,TM.Metric,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_OS_Contract_Gov_SIA
from mcrt..tblRASMetrics RM
join mcrt..tblMetrics TM 
on RM.MetricId=TM.ContentId
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=6
and RM.RiskThemeId=13 and
RM.MetricId in (111);
Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_OS_Contract_Gov_SIA;
	  set @TotalRows=isnull(@TotalRows,0);
	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @MetricName nvarchar(512),
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;
		   WHILE (@Iterator <= @TotalRows)
BEGIN
select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @MetricName=Metric,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='lower(ltrim(rtrim([Compliance Status])))=''non compliant'' ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_OS_Contract_Gov_SIA where 
		 RowId=@Iterator;
		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN
		 ---Region
		 --if(@ZoneContextId = 1 and @RegionId>0)
		 --BEGIN
		 --if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 --begin
		 --SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 --end
		 --else
		 --begin
		 --SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 --end
		 --if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 --begin		
		 --SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 --end
		 --else
		 --begin
		 --SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 --end
		
		 --END

		  ---SLT
		 if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN
		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end
		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	
		 END

		 END
	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;
		  Print @NumeratorSQL;
		  Print @DenominatorSQL;
		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';
		  Print @RasMetricId;
		  Print @PerformanceInfo;
		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorCount * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end
		  print @InputPerformanceValue;
		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])
	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();
		  END
		  ELSE
		  BEGIN
		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
		  END
	
	
		 Set @Iterator = @Iterator + 1;
END
Drop table #temp_OS_Contract_Gov_SIA;
  COMMIT
    END TRY
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_People_Attrition_AbsenceRate]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Proc [dbo].[ExtractPerformanceFor_People_Attrition_AbsenceRate] -- ExtractPerformanceFor_People_Attrition_AbsenceRate '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(*) from vPeople_Attrition_AbsenceRate';
	  SET @PerformanceSQL = 'select @NmCount=count(*) from vPeople_Attrition_AbsenceRate'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_People_Attrition_AbsenceRate
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=4
and RM.RiskThemeId=18 and
RM.MetricId in (94);


Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_People_Attrition_AbsenceRate;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='lower(ltrim(rtrim([StatusSummary])))=''absence'' ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_People_Attrition_AbsenceRate where 
		 RowId=@Iterator;

		 
		


		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

	


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorCount * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END




	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_People_Attrition_AbsenceRate;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_People_CRF_CoreSkills]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Proc [dbo].[ExtractPerformanceFor_People_CRF_CoreSkills] -- [ExtractPerformanceFor_People_CRF_CoreSkills] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(distinct [Employee ID]) from vPeople_CRF';
	  SET @PerformanceSQL = 'select @NmCount=count(distinct [Employee ID]) from vPeople_CRF'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_People_CRF_CoreSkills
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=4
and RM.RiskThemeId=19 and
RM.MetricId in (93);


Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_People_CRF_CoreSkills;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='lower(ltrim(rtrim([Core Skills Status])))=''non-compliant'' and 
		 lower(ltrim(rtrim([People Exclusions])))=''included'' and [DOJ_30_FLag]=1 ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_People_CRF_CoreSkills where 
		 RowId=@Iterator;

		 


		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

	


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast((@DenominatorCount -@NumeratorCount) as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= ((@DenominatorCount -@NumeratorCount) * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END


	

	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_People_CRF_CoreSkills;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_People_CRF_Roles]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_People_CRF_Roles] -- [ExtractPerformanceFor_People_CRF_Roles] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(distinct [Employee ID]) from vPeople_CRF';
	  SET @PerformanceSQL = 'select @NmCount=count(distinct [Employee ID]) from vPeople_CRF'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_People_CRF_Roles
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=4
and RM.RiskThemeId=19 and
RM.MetricId in (91);


Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_People_CRF_Roles;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='lower(ltrim(rtrim([Role Status])))=''non-compliant'' and 
		 lower(ltrim(rtrim([People Exclusions])))=''included'' and [DOJ_30_FLag]=1 ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_People_CRF_Roles where 
		 RowId=@Iterator;

		 


		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

	


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast((@DenominatorCount -@NumeratorCount) as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= ((@DenominatorCount -@NumeratorCount) * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END


	

	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_People_CRF_Roles;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_People_CRF_Vacancies]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_People_CRF_Vacancies] -- [ExtractPerformanceFor_People_CRF_Vacancies] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

Select * into #tempvPeople_CRF_Vacancies
from vPeople_CRF_Vacancies;

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(*) from #tempvPeople_CRF_Vacancies';
	  SET @PerformanceSQL = 'select @NmCount=count(*) from #tempvPeople_CRF_Vacancies'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId into #temp_People_CRF_Vacancies
from mcrt..tblRASMetrics RM
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.MaterialRiskId=4
and RM.RiskThemeId=19 and
RM.MetricId in (101);


Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_People_CRF_Vacancies;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='lower(ltrim(rtrim([Compliance Status])))=''non compliant'' ',
		 @DenominatorWhereSQL='',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_People_CRF_Vacancies where 
		 RowId=@Iterator;

		 


		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

	


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast((@NumeratorCount) as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= ((@NumeratorCount) * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END


	

	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_People_CRF_Vacancies;
Drop table #tempvPeople_CRF_Vacancies;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_TOHR_Open_Issues_ExtDueDate_Major]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Proc [dbo].[ExtractPerformanceFor_TOHR_Open_Issues_ExtDueDate_Major] -- [ExtractPerformanceFor_TOHR_Open_Issues_ExtDueDate_Major] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
   
	  SET @PerformanceSQL = 'select @Count=count(*) from vTOHRTable'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,MR.Name as MaterialRiskName,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId 
into #temp_TOHR_Open_Issues_ExtDueDate_Major
from mcrt..tblRASMetrics RM
join mcrt..tblMaterialRisks MR
on Isnull(RM.MaterialRiskId,0)=MR.ContentId
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.RiskThemeId=11 
and RM.MetricId in (1);

Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_TOHR_Open_Issues_ExtDueDate_Major;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @MaterialRiskName varchar(128),
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@NumeratorSQL nvarchar(max),
		 @PerformanceInfo varchar(128),
		 @NumeratorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @MaterialRiskName=MaterialRiskName,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,
		 @NumeratorWhereSQL='lower(ltrim(rtrim([Impact Rating]))) =''major'' and 
		 lower(ltrim(rtrim([Issue Status]))) in (''accepted'',''addressing'') and [count_ext_due_date_change] > 1 
		 and LTRIM(RTRIM([Material Risk])) =''' + MaterialRiskName + ''' ',
		@NumeratorSQL='',@NumeratorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_TOHR_Open_Issues_ExtDueDate_Major where 
		 RowId=@Iterator;

		 
	

		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end
		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

	
	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
	     Print @NumeratorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@Count int OUTPUT', @Count=@NumeratorCount OUTPUT;
		
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		 SET @InputPerformanceValue= @NumeratorCount;

		  print @InputPerformanceValue;
	

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END




	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_TOHR_Open_Issues_ExtDueDate_Major;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_TOHR_Open_Issues_ExtDueDate_Significant]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Proc [dbo].[ExtractPerformanceFor_TOHR_Open_Issues_ExtDueDate_Significant] -- [ExtractPerformanceFor_TOHR_Open_Issues_ExtDueDate_Significant] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
   
	  SET @PerformanceSQL = 'select @Count=count(*) from vTOHRTable'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,MR.Name as MaterialRiskName,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId 
into #temp_TOHR_Open_Issues_ExtDueDate_Significant
from mcrt..tblRASMetrics RM
join mcrt..tblMaterialRisks MR
on Isnull(RM.MaterialRiskId,0)=MR.ContentId
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.RiskThemeId=11 
and RM.MetricId in (2);

Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_TOHR_Open_Issues_ExtDueDate_Significant;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @MaterialRiskName varchar(128),
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@NumeratorSQL nvarchar(max),
		 @PerformanceInfo varchar(128),
		 @NumeratorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @MaterialRiskName=MaterialRiskName,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,
		 @NumeratorWhereSQL='lower(ltrim(rtrim([Impact Rating]))) =''significant'' and 
		 lower(ltrim(rtrim([Issue Status]))) in (''accepted'',''addressing'') and [count_ext_due_date_change] > 1 
		 and LTRIM(RTRIM([Material Risk])) =''' + MaterialRiskName + ''' ',
		@NumeratorSQL='',@NumeratorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_TOHR_Open_Issues_ExtDueDate_Significant where 
		 RowId=@Iterator;

		 
	

		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end
		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

	
	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
	     Print @NumeratorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@Count int OUTPUT', @Count=@NumeratorCount OUTPUT;
		
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		 SET @InputPerformanceValue= @NumeratorCount;

		  print @InputPerformanceValue;
	

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END




	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_TOHR_Open_Issues_ExtDueDate_Significant;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END

GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_TOHR_Open_Issues_Major]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_TOHR_Open_Issues_Major] -- [ExtractPerformanceFor_TOHR_Open_Issues_Major] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
   
	  SET @PerformanceSQL = 'select @Count=count(*) from vTOHRTable'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,MR.Name as MaterialRiskName,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId 
into #temp_TOHR_Open_Issues_Major
from mcrt..tblRASMetrics RM
join mcrt..tblMaterialRisks MR
on Isnull(RM.MaterialRiskId,0)=MR.ContentId
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.RiskThemeId=11 
and RM.MetricId in (3);

Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_TOHR_Open_Issues_Major;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @MaterialRiskName varchar(128),
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@NumeratorSQL nvarchar(max),
		 @PerformanceInfo varchar(128),
		 @NumeratorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @MaterialRiskName=MaterialRiskName,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,
		 @NumeratorWhereSQL='lower(ltrim(rtrim([Impact Rating]))) =''major'' and 
		 lower(ltrim(rtrim([Issue Status]))) in (''accepted'',''addressing'') 
		 and LTRIM(RTRIM([Material Risk])) =''' + MaterialRiskName + ''' ',
		@NumeratorSQL='',@NumeratorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_TOHR_Open_Issues_Major where 
		 RowId=@Iterator;

		 
	

		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end
		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

	
	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
	     Print @NumeratorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@Count int OUTPUT', @Count=@NumeratorCount OUTPUT;
		
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		 SET @InputPerformanceValue= @NumeratorCount;

		  print @InputPerformanceValue;
	

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END




	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_TOHR_Open_Issues_Major;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_TOHR_Open_Issues_PastDues_Major]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_TOHR_Open_Issues_PastDues_Major] -- [ExtractPerformanceFor_TOHR_Open_Issues_PastDues_Major] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(*) from vTOHRTable';
	  SET @PerformanceSQL = 'select @NmCount=count(*) from vTOHRTable'	  



select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,MR.Name as MaterialRiskName,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId 
into #temp_TOHR_Open_Issues_PastDues_Major
from mcrt..tblRASMetrics RM
join mcrt..tblMaterialRisks MR
on Isnull(RM.MaterialRiskId,0)=MR.ContentId
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.RiskThemeId=11 
and RM.MetricId in (13);


Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_TOHR_Open_Issues_PastDues_Major;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		  @MaterialRiskName varchar(128),
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @MaterialRiskName=MaterialRiskName,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='lower(ltrim(rtrim([Impact Rating]))) =''major'' and 
		 lower(ltrim(rtrim([Issue Status]))) in (''accepted'',''addressing'') and 
		 lower(ltrim(rtrim([flgClosedPendReview]))) =''n'' and 
		 (CASE When  Convert(varchar(10),[Revised Target Completion Date (Issue)],126) is null then 
         Convert(varchar(10),[Target Completion Date (Issue)],126)
         else Convert(varchar(10),[Revised Target Completion Date (Issue)],126) end) < Convert(varchar(10),getutcdate(),126) 
         and LTRIM(RTRIM([Material Risk])) =''' + MaterialRiskName + ''' ',
		 @DenominatorWhereSQL='lower(ltrim(rtrim([Impact Rating]))) =''major'' and 
		 lower(ltrim(rtrim([Issue Status]))) in (''accepted'',''addressing'') and 
		 lower(ltrim(rtrim([flgClosedPendReview]))) =''n'' 
         and LTRIM(RTRIM([Material Risk])) =''' + MaterialRiskName + ''' ',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_TOHR_Open_Issues_PastDues_Major where 
		 RowId=@Iterator;

		 


		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

	


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorCount * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END


	

	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_TOHR_Open_Issues_PastDues_Major;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_TOHR_Open_Issues_PastDues_Significant]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[ExtractPerformanceFor_TOHR_Open_Issues_PastDues_Significant] -- [ExtractPerformanceFor_TOHR_Open_Issues_PastDues_Significant] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @RootSQL NVARCHAR(max),@PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
      SET @RootSQL = 'select @DnCount=count(*) from vTOHRTable';
	  SET @PerformanceSQL = 'select @NmCount=count(*) from vTOHRTable'	  



select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,MR.Name as MaterialRiskName,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId 
into #temp_TOHR_Open_Issues_PastDues_Significant
from mcrt..tblRASMetrics RM
join mcrt..tblMaterialRisks MR
on Isnull(RM.MaterialRiskId,0)=MR.ContentId
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.RiskThemeId=11 
and RM.MetricId in (14);


Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_TOHR_Open_Issues_PastDues_Significant;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		  @MaterialRiskName varchar(128),
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@DenominatorWhereSQL nvarchar(max),@NumeratorSQL nvarchar(max),
		 @DenominatorSQL nvarchar(max), @PerformanceInfo varchar(128),
		 @NumeratorCount int,@DenominatorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @MaterialRiskName=MaterialRiskName,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,@NumeratorWhereSQL='lower(ltrim(rtrim([Impact Rating]))) =''significant'' and 
		 lower(ltrim(rtrim([Issue Status]))) in (''accepted'',''addressing'') and 
		 lower(ltrim(rtrim([flgClosedPendReview]))) =''n'' and 
		 (CASE When  Convert(varchar(10),[Revised Target Completion Date (Issue)],126) is null then 
         Convert(varchar(10),[Target Completion Date (Issue)],126)
         else Convert(varchar(10),[Revised Target Completion Date (Issue)],126) end) < Convert(varchar(10),getutcdate(),126) 
         and LTRIM(RTRIM([Material Risk])) =''' + MaterialRiskName + ''' ',
		 @DenominatorWhereSQL='lower(ltrim(rtrim([Impact Rating]))) =''significant'' and 
		 lower(ltrim(rtrim([Issue Status]))) in (''accepted'',''addressing'') and 
		 lower(ltrim(rtrim([flgClosedPendReview]))) =''n'' 
         and LTRIM(RTRIM([Material Risk])) =''' + MaterialRiskName + ''' ',@NumeratorSQL='',@DenominatorSQL='',@NumeratorCount=0,@DenominatorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_TOHR_Open_Issues_PastDues_Significant where 
		 RowId=@Iterator;

		 


		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' Region=''' + @RegionName + '''';
		 end


		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end


		 if(@DenominatorWhereSQL <> '' and len(@DenominatorWhereSQL)>0)
		 begin		
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @DenominatorWhereSQL= @DenominatorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

	


	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
		  SET @DenominatorSQL= @RootSQL + case when Isnull(@DenominatorWhereSQL,'') <>'' and len(Isnull(@DenominatorWhereSQL,''))>0 then ' Where ' +  @DenominatorWhereSQL else '' end;

		  Print @NumeratorSQL;
		  Print @DenominatorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@NmCount int OUTPUT', @NmCount=@NumeratorCount OUTPUT;
		  EXECUTE sp_executesql @DenominatorSQL, N'@DnCount int OUTPUT', @DnCount=@DenominatorCount OUTPUT
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + '/' + cast(@DenominatorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		  if(@DenominatorCount>0)
		  begin
		  SET @InputPerformanceValue= (@NumeratorCount * 100 * 1.00)/@DenominatorCount;
		  end
		  else
		  begin
		  SET @InputPerformanceValue=0;
		  end

		  print @InputPerformanceValue;

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END


	

	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_TOHR_Open_Issues_PastDues_Significant;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ExtractPerformanceFor_TOHR_Open_Issues_Significant]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create Proc [dbo].[ExtractPerformanceFor_TOHR_Open_Issues_Significant] -- [ExtractPerformanceFor_TOHR_Open_Issues_Significant] '20170701','FM\rustroh'
@WeekKey varchar(50),
@CreatedBy varchar(50)
AS
  BEGIN
    SET XACT_ABORT  ON
    SET NOCOUNT ON
    
    BEGIN TRY
      BEGIN TRAN

DECLARE @PerformanceSQL nvarchar(max);
Declare @Iterator int, @TotalRows int;
   
	  SET @PerformanceSQL = 'select @Count=count(*) from vTOHRTable'	  


select ROW_NUMBER() over (order by RM.ContentId ASC) as RowId,
RM.ContentId as RasMetricId,
RM.MaterialRiskId,MR.Name as MaterialRiskName,RM.RiskThemeId,RM.MetricId,
RM.DimensionId,Isnull(RM.ZoneContextId,0) as ZoneContextId,
Isnull(RM.RegionId,0) as RegionId,tr.Region as RegionName,
Isnull(RM.SLTId,0) as SLTId,ts.SLTName,
Isnull(RM.TierId,0) as TierId 
into #temp_TOHR_Open_Issues_Significant
from mcrt..tblRASMetrics RM
join mcrt..tblMaterialRisks MR
on Isnull(RM.MaterialRiskId,0)=MR.ContentId
left outer join mcrt..tblRegion tr
on Isnull(RM.RegionId,0)=tr.RegionId
left outer join mcrt..tblSLTs ts on Isnull(RM.SLTId,0)=ts.ContentId
where RM.RiskThemeId=11 
and RM.MetricId in (4);

Set @Iterator=1;
	  Select @TotalRows=count(*) from #temp_TOHR_Open_Issues_Significant;
	  set @TotalRows=isnull(@TotalRows,0);

	  DEclare @RasMetricId int,         
		 @MaterialRiskId int,
		 @MaterialRiskName varchar(128),
		 @RiskThemeId int,
		 @MetricId int,
		 @DimensionId int,
		 @ZoneContextId int,
		 @RegionId int,
		 @RegionName varchar(50),
		 @SLTId int,
		 @SLTName varchar(50),
		 @TierId int,
		 @NumeratorWhereSQL NVARCHAR(max),@NumeratorSQL nvarchar(max),
		 @PerformanceInfo varchar(128),
		 @NumeratorCount int,@InputPerformanceValue float=null,
		 @NoOfRecords int=null,@RegionWiseKRIPerformance varchar(max) = null,@RagFlag int = null,@KRIRemark nvarchar(512) =null;

		   WHILE (@Iterator <= @TotalRows)
BEGIN

select @RasMetricId =RasMetricId,        
	   @MaterialRiskId =MaterialRiskId,
	   @MaterialRiskName=MaterialRiskName,
	   @RiskThemeId =RiskThemeId,
	   @MetricId =MetricId,
	   @ZoneContextId=ZoneContextId,
	   @DimensionId =DimensionId,
		@RegionId =RegionId,
		 @RegionName =RegionName,
		 @SLTId =SLTId,
		 @SLTName =SLTName,
		 @TierId =TierId,
		 @NumeratorWhereSQL='lower(ltrim(rtrim([Impact Rating]))) =''significant'' and 
		 lower(ltrim(rtrim([Issue Status]))) in (''accepted'',''addressing'') 
		 and LTRIM(RTRIM([Material Risk])) =''' + MaterialRiskName + ''' ',
		@NumeratorSQL='',@NumeratorCount=0,
		 @PerformanceInfo=null,@InputPerformanceValue=null,@NoOfRecords=null,
		 @RegionWiseKRIPerformance=null,@RagFlag=null,@KRIRemark=null
		 from #temp_TOHR_Open_Issues_Significant where 
		 RowId=@Iterator;

		 
	

		---ZoneContext
		if(@ZoneContextId >0)
		 BEGIN

		 ---Region
		 if(@ZoneContextId = 1 and @RegionId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and Region=''' + @RegionName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' Region=''' + @RegionName + '''';		
		 end
		
		 END

		  ---SLT
		 Else if(@ZoneContextId = 2 and @SLTId>0)
		 BEGIN

		 if(@NumeratorWhereSQL <> '' and len(@NumeratorWhereSQL)>0)
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' and SLT=''' + @SLTName + '''';
		 end
		 else
		 begin
		 SET @NumeratorWhereSQL= @NumeratorWhereSQL + ' SLT=''' + @SLTName + '''';
		 end	

		 END

		 END

	
	     SET @NumeratorSQL= @PerformanceSQL + case when Isnull(@NumeratorWhereSQL,'') <>'' and len(Isnull(@NumeratorWhereSQL,''))>0 then ' Where ' +  @NumeratorWhereSQL else '' end;
	     Print @NumeratorSQL;

		  EXECUTE sp_executesql @NumeratorSQL, N'@Count int OUTPUT', @Count=@NumeratorCount OUTPUT;
		
		  
		  SET @PerformanceInfo = '(' + cast(@NumeratorCount as varchar(50)) + ')';

		  Print @RasMetricId;
		  Print @PerformanceInfo;

		 SET @InputPerformanceValue= @NumeratorCount;

		  print @InputPerformanceValue;
	

		  if not exists (select top 1 1 from tblRasmetricPerformance_Stage where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,''))
		  BEGIN
		  Insert into tblRasmetricPerformance_Stage([RasMetricId]
      ,[InputPerformanceValue]
      ,[NoOfRecords]
      ,[RegionWiseKRIPerformance]
      ,[RagFlag]
      ,[KRIRemark]
      ,[PerformanceInfo]
      ,[WeekKey]
      ,[CreatedBy]
      ,[CreatedDate])

	  Select @RasMetricId
      ,@InputPerformanceValue
      ,@NoOfRecords
      ,@RegionWiseKRIPerformance
      ,@RagFlag
      ,@KRIRemark
      ,@PerformanceInfo
      ,@WeekKey
      ,@CreatedBy
      ,GETUTCDATE();

		  END
		  ELSE
		  BEGIN

		  Update tblRasmetricPerformance_Stage set [InputPerformanceValue]=@InputPerformanceValue
       ,[NoOfRecords]=@NoOfRecords
      ,[RegionWiseKRIPerformance]=@RegionWiseKRIPerformance
      ,[RagFlag]=@RagFlag
      ,[KRIRemark]=@KRIRemark
      ,[PerformanceInfo]=@PerformanceInfo,
	  modifiedBy=@CreatedBy,ModifiedDate=GETUTCDATE()
	  where RasMetricId=@RasMetricId
		  and WeekKey=Isnull(@WeekKey,'')
 
		  END




	
		 Set @Iterator = @Iterator + 1;
END



Drop table #temp_TOHR_Open_Issues_Significant;


  COMMIT

    END TRY
    
    BEGIN CATCH
      ROLLBACK TRAN
      Print ERROR_Message();
      PRINT 'Something went wrong'
    END CATCH
  END
GO
/****** Object:  StoredProcedure [dbo].[ImportDSSForRAS]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[ImportDSSForRAS]
AS
BEGIN
---tblAllApps
Truncate Table tblAllapps;
insert into tblAllapps([GEL ID]
      ,[Tech Division]
      ,[Unit]
      ,[Department]
      ,[System Location]
      ,[System]
      ,[Location]
      ,[GEL Status]
      ,[UnitHead]
      ,[DeptHead]
      ,[TeamHead]
      ,[Prod]
      ,[Contingency]
      ,[ARMEnabled]
      ,[Group RTO]
      ,[Record Type]
      ,[CWSurvey Compliance %]
      ,[Last Test]
      ,[Last Test  / Scheduled Test Date]
      ,[Last Result]
      ,[Governance Expiry Date]
      ,[No Days Remaining]
      ,[DR Test Missed]
      ,[DR Doc Uploaded in GEL]
      ,[Out of Governance]
      ,[CIA Rating]
      ,[CIA Upload Date]
      ,[iUER Status]
      ,[Gel Status Date]
      ,[Capacity RAG]
      ,[Uptime]
      ,[Team]
      ,[Unplanned CRs]
      ,[Unplanned Changes]
      ,[CRs]
      ,[Changes]
      ,[Incident Count]
      ,[Sev1]
      ,[Sev2]
      ,[Clockwork Compliance]
      ,[Development Contact]
      ,[Support Contact]
      ,[Support Mail]
      ,[Update Responsibility]
      ,[Infrastructure Reviewer]
      ,[App Manager]
      ,[AppManagerEmail]
      ,[App Manager Status]
      ,[SoxCriticality]
      ,[RBAM Coverage]
      ,[BuiltbyDesc]
      ,[Sev3]
      ,[Sev4]
      ,[Remedy Queue Name]
      ,[Customer Lens]
      ,[External Use]
      ,[Financial Transaction]
      ,[DRAppFlag]
      ,[AppManagerRegion]
      ,[Date_1]
      ,[Key_Unit_Date_1]
      ,[Key_GELID_Date_1])
	  select * from MCPCEC_BI..tblAllapps
	  where convert(varchar(10),Date_1,126)=(select convert(varchar(10),max([Date_1]),126) 
	  from MCPCEC_BI..tblAllapps)
---TblTier
Truncate Table tblTier;
insert into tblTier(GelId,Tier)
select GelId,Tier 
from MCPCEC_BI..tblTier;
---TblGel
Truncate Table tblGel;
insert into tblGel(
[GEL ID]
      ,[Goveranance ApplicationManager]
      ,[GelGovTabName]
      ,[Signoff byFullname]
      ,[GelGovSignoffbyEmail]
      ,[GelGovSignoffbyEmployeeStatus]
      ,[Catalogue RecordType]
      ,[SystemStatusDesc]
      ,[TabSignOffAge]
      ,[Gel Sign Off Status]
      ,[TabSignOffDate]
      ,[Date_1]
      ,[Key_GELID_Date_1])
Select [GEL ID]
      ,[Goveranance ApplicationManager]
      ,[GelGovTabName]
      ,[Signoff byFullname]
      ,[GelGovSignoffbyEmail]
      ,[GelGovSignoffbyEmployeeStatus]
      ,[Catalogue RecordType]
      ,[SystemStatusDesc]
      ,[TabSignOffAge]
      ,[Gel Sign Off Status]
      ,[TabSignOffDate]
      ,[Date_1]
      ,[Key_GELID_Date_1]
	  from MCPCEC_BI..tblGel
	  where convert(varchar(10),Date_1,126)=(select convert(varchar(10),max([Date_1]),126) 
	  from MCPCEC_BI..tblGel)
---TblEOL
Truncate Table TblEOL;
Insert into tblEOL([GEL ID]
      ,[Hostname]
      ,[HostType]
      ,[ParentHostName]
      ,[TeamHead]
      ,[Applicaiton Manager]
      ,[EOLHWRemediation]
      ,[SystemStatusDesc]
      ,[CatalogueRecordType]
      ,[AppCIAHighestRating]
      ,[AppBuySellHoldFlag]
      ,[InfraEnvDescription]
      ,[Date_1]
      ,[Key_GELID_Date_1])
	  SELECT [GEL ID]
      ,[Hostname]
      ,[HostType]
      ,[ParentHostName]
      ,[TeamHead]
      ,[Applicaiton Manager]
      ,[EOLHWRemediation]
      ,[SystemStatusDesc]
      ,[CatalogueRecordType]
      ,[AppCIAHighestRating]
      ,[AppBuySellHoldFlag]
      ,[InfraEnvDescription]
      ,[Date_1]
      ,[Key_GELID_Date_1]
  FROM  MCPCEC_BI..tblEOL
	  where convert(varchar(10),Date_1,126)=(select convert(varchar(10),max([Date_1]),126) 
	  from MCPCEC_BI..tblEOL)
	  ---tblAppmapping
	  Truncate table tblAppmapping;
	  Insert into tblAppmapping(
	  [Unit]
      ,[Mapping]
      ,[Date_1]
      ,[Key_Unit_Date_1])
	  Select  [Unit]
      ,[Mapping]
      ,[Date_1]
      ,[Key_Unit_Date_1]
  FROM MCPCEC_BI..[tblAppmapping]
  where convert(varchar(10),Date_1,126)=(select convert(varchar(10),max([Date_1]),126) 
	  from MCPCEC_BI..[tblAppmapping])
	  ---tblIncident
	  Truncate table tblIncident;
	  Insert into tblIncident(
	  [Incident Number]
      ,[Priority]
      ,[Impact]
      ,[Urgency]
      ,[Incident_Master/Child]
      ,[Master Incident]
      ,[Impact Start Date]
      ,[Impact End Date]
      ,[Opened  At]
      ,[Closed  At]
      ,[Incident State]
      ,[Incident Manager]
      ,[Affected Services]
      ,[Type]
      ,[Severity]
      ,[Severity Level]
      ,[Category]
      ,[Sub Category]
      ,[Business Duration]
      ,[Calendar Duration]
      ,[Impact Duration]
      ,[Work Start]
      ,[Work End]
      ,[Caused  By Change]
      ,[Caused  By Incident]
      ,[Change Count]
      ,[Change Date]
      ,[Close Code]
      ,[Close Sub Code]
      ,[Name_CMDB]
      ,[Class]
      ,[Catalogue Id]
      ,[Date_1]
      ,[Key_GELID_Date_1])
	  select  [Incident Number]
      ,[Priority]
      ,[Impact]
      ,[Urgency]
      ,[Incident_Master/Child]
      ,[Master Incident]
      ,[Impact Start Date]
      ,[Impact End Date]
      ,[Opened  At]
      ,[Closed  At]
      ,[Incident State]
      ,[Incident Manager]
      ,[Affected Services]
      ,[Type]
      ,[Severity]
      ,[Severity Level]
      ,[Category]
      ,[Sub Category]
      ,[Business Duration]
      ,[Calendar Duration]
      ,[Impact Duration]
      ,[Work Start]
      ,[Work End]
      ,[Caused  By Change]
      ,[Caused  By Incident]
      ,[Change Count]
      ,[Change Date]
      ,[Close Code]
      ,[Close Sub Code]
      ,[Name_CMDB]
      ,[Class]
      ,[Catalogue Id]
      ,[Date_1]
      ,[Key_GELID_Date_1]
  FROM MCPCEC_BI..[tblIncident]
  where convert(varchar(10),Date_1,126)=(select convert(varchar(10),max([Date_1]),126) 
	  from MCPCEC_BI..[tblIncident])
---TblProvision
Truncate table tblProvision 
Insert into tblProvision([GEL ID]
      ,[SystemStatusDesc]
      ,[CatalogueRecordType]
      ,[AppCIAHighestRating]
      ,[Provision]
      ,[Last Updated]
      ,[Planned Date]
      ,[Required Date]
      ,[Ques Type]
      ,[ClokworkResponse]
      ,[Parent Application Name]
      ,[GovernanceCompliance]
      ,[Provision Compliance]
      ,[Survey RelationshipStatus]
      ,[Date_1]
      ,[Key_GELID_Date_1]
      ,[Key_ProvID_Date_1])
	  Select [GEL ID]
      ,[SystemStatusDesc]
      ,[CatalogueRecordType]
      ,[AppCIAHighestRating]
      ,[Provision]
      ,[Last Updated]
      ,[Planned Date]
      ,[Required Date]
      ,[Ques Type]
      ,[ClokworkResponse]
      ,[Parent Application Name]
      ,[GovernanceCompliance]
      ,[Provision Compliance]
      ,[Survey RelationshipStatus]
      ,[Date_1]
      ,[Key_GELID_Date_1]
      ,[Key_ProvID_Date_1] from MCPCEC_BI..tblProvision
	    where convert(varchar(10),Date_1,126)=(select convert(varchar(10),max([Date_1]),126) 
	  from MCPCEC_BI..tblProvision)
	  ---tblIncidents12Months
	  Truncate table tblIncidents12Months;
	  Insert into tblIncidents12Months(
	  [Incident Number]
      ,[Priority]
      ,[Impact]
      ,[Urgency]
      ,[Incident_Master/Child]
      ,[Master Incident]
      ,[Impact Start Date]
      ,[Impact End Date]
      ,[Opened  At]
      ,[Closed  At]
      ,[Incident State]
      ,[Incident Manager]
      ,[Affected Services]
      ,[Type]
      ,[Severity]
      ,[Severity Level]
      ,[Category]
      ,[Sub Category]
      ,[Business Duration]
      ,[Calendar Duration]
      ,[Impact Duration]
      ,[Work Start]
      ,[Work End]
      ,[Caused  By Change]
      ,[Caused  By Incident]
      ,[Change Count]
      ,[Change Date]
      ,[Close Code]
      ,[Close Sub Code]
      ,[Name_CMDB]
      ,[Class]
      ,[Catalogue Id]
      ,[Date_1]
      ,[Key_GELID_Date_1])
	  select  [Incident Number]
      ,[Priority]
      ,[Impact]
      ,[Urgency]
      ,[Incident_Master/Child]
      ,[Master Incident]
      ,[Impact Start Date]
      ,[Impact End Date]
      ,[Opened  At]
      ,[Closed  At]
      ,[Incident State]
      ,[Incident Manager]
      ,[Affected Services]
      ,[Type]
      ,[Severity]
      ,[Severity Level]
      ,[Category]
      ,[Sub Category]
      ,[Business Duration]
      ,[Calendar Duration]
      ,[Impact Duration]
      ,[Work Start]
      ,[Work End]
      ,[Caused  By Change]
      ,[Caused  By Incident]
      ,[Change Count]
      ,[Change Date]
      ,[Close Code]
      ,[Close Sub Code]
      ,[Name_CMDB]
      ,[Class]
      ,[Catalogue Id]
      ,[Date_1]
      ,[Key_GELID_Date_1]
  FROM MCPCEC_BI..tblIncidents12Months
  where convert(varchar(10),Date_1,126)=(select convert(varchar(10),max([Date_1]),126) 
	  from MCPCEC_BI..tblIncidents12Months)
	  ---tblChange 
	  Truncate table tblChange;
	  Insert into tblChange([Change Number]
      ,[Priority]
      ,[Impact]
      ,[Urgency]
      ,[Change Scheduled Start]
      ,[Change Scheduled End]
      ,[Change Opened At]
      ,[Change Closed At]
      ,[Change Risk]
      ,[Change State]
      ,[Change Close Code]
      ,[Approval]
      ,[Category]
      ,[Change Raiser]
      ,[Change Type]
      ,[Phase State]
      ,[Affected Services]
      ,[Catalogue Id]
      ,[Application Instance]
      ,[Gel Status]
      ,[Record Type]
      ,[Change Active]
      ,[Applications  Affected]
      ,[Chang Applied By]
      ,[Change Applied Date]
      ,[Apporval Deadline]
      ,[Approval History]
      ,[Assigned To]
      ,[Assignment Group]
      ,[Authoriser]
      ,[Change effective From]
      ,[Check Date]
      ,[Checker]
      ,[Checker Assigmnet Group]
      ,[Checker At]
      ,[CI Class]
      ,[Closed By]
      ,[Completion Code]
      ,[CR_Due_date]
      ,[Expected Start]
      ,[Expedited Change]
      ,[Expedited Change Justification]
      ,[Failure Code]
      ,[List of Franchisee]
      ,[Mcr_Approval Deadline]
      ,[Mcr_State]
      ,[Opened By]
      ,[Outage Duration]
      ,[Outage Start]
      ,[Outage End]
      ,[Phase]
      ,[Ready For Checker]
      ,[Related Incident]
      ,[Related Problem]
      ,[Requested By]
      ,[Scope]
      ,[Servicess Affected]
      ,[Severity Code]
      ,[Short Description]
      ,[App Manager Name]
      ,[AppManagerRegionName]
      ,[Date_1]
      ,[Key_GELID_Date_1])
Select
	  [Change Number]
      ,[Priority]
      ,[Impact]
      ,[Urgency]
      ,[Change Scheduled Start]
      ,[Change Scheduled End]
      ,[Change Opened At]
      ,[Change Closed At]
      ,[Change Risk]
      ,[Change State]
      ,[Change Close Code]
      ,[Approval]
      ,[Category]
      ,[Change Raiser]
      ,[Change Type]
      ,[Phase State]
      ,[Affected Services]
      ,[Catalogue Id]
      ,[Application Instance]
      ,[Gel Status]
      ,[Record Type]
      ,[Change Active]
      ,[Applications  Affected]
      ,[Chang Applied By]
      ,[Change Applied Date]
      ,[Apporval Deadline]
      ,[Approval History]
      ,[Assigned To]
      ,[Assignment Group]
      ,[Authoriser]
      ,[Change effective From]
      ,[Check Date]
      ,[Checker]
      ,[Checker Assigmnet Group]
      ,[Checker At]
      ,[CI Class]
      ,[Closed By]
      ,[Completion Code]
      ,[CR_Due_date]
      ,[Expected Start]
      ,[Expedited Change]
      ,[Expedited Change Justification]
      ,[Failure Code]
      ,[List of Franchisee]
      ,[Mcr_Approval Deadline]
      ,[Mcr_State]
      ,[Opened By]
      ,[Outage Duration]
      ,[Outage Start]
      ,[Outage End]
      ,[Phase]
      ,[Ready For Checker]
      ,[Related Incident]
      ,[Related Problem]
      ,[Requested By]
      ,[Scope]
      ,[Servicess Affected]
      ,[Severity Code]
      ,[Short Description]
      ,[App Manager Name]
      ,[AppManagerRegionName]
      ,[Date_1]
      ,[Key_GELID_Date_1]
  FROM [MCPCEC_BI]..[tblChange]
   where convert(varchar(10),Date_1,126)=(select convert(varchar(10),max([Date_1]),126) 
	  from MCPCEC_BI..[tblChange])

	  ---TblProvisionMapping

	  Truncate table tblProvisionMapping;
	  Insert into tblProvisionMapping([ProvisionID]
      ,[Provision Name]
      ,[Date_1]
      ,[Key_ProvID_Date_1])

	  Select [ProvisionID]
      ,[Provision Name]
      ,[Date_1]
      ,[Key_ProvID_Date_1]
  FROM MCPCEC_BI..[tblProvisionMapping]
  Where convert(varchar(10),Date_1,126)=(select convert(varchar(10),max([Date_1]),126) 
	  from MCPCEC_BI..[tblProvisionMapping])

	  ---tblheadcountPeoplesoft

	  truncate table tblheadcountPeoplesoft;

	  Insert into tblheadcountPeoplesoft([Unique ID]
      ,[HR System]
      ,[Employee ID]
      ,[Title]
      ,[Formal Forename]
      ,[Preferred Forename]
      ,[Middle Names]
      ,[Surname]
      ,[Business Title]
      ,[Corporate Title]
      ,[Work Email Address]
      ,[Office Telephone Number]
      ,[Accredited Service Date]
      ,[Contract End Date]
      ,[Continuous Service (Yrs)]
      ,[Snapshot Month]
      ,[Core / Non Core]
      ,[Division]
      ,[SubDivision 1]
      ,[SubDivision 2]
      ,[SubDivision 3]
      ,[SubDivision 4]
      ,[SubDivision 5]
      ,[SubDivision 6]
      ,[SubDivision 7]
      ,[Cost Centre]
      ,[Cost Centre Name]
      ,[Global Cost Centre]
      ,[Legal Entity]
      ,[RBS Structural Region]
      ,[Work Location Code]
      ,[Work Location - Floor]
      ,[Work Location - Address 1]
      ,[Work Location - Address 2]
      ,[Work Location - Address 3]
      ,[Work Location - Address 4]
      ,[Work Location - Post Code]
      ,[Work Location - Country]
      ,[Work Location - Depot]
      ,[Gender Code]
      ,[Job Code]
      ,[Job Entry Date]
      ,[Manager Level]
      ,[Class]
      ,[Full/Part Time]
      ,[Permanent / FTC]
      ,[Active/ InActive]
      ,[Function Code]
      ,[Function]
      ,[Line Manager ID]
      ,[Line Manager First Name]
      ,[Line Manager Surname]
      ,[Line Manager E-mail]
      ,[FTE]
      ,[FTE Count]
      ,[Date_1]
      ,[Key_CostCenter_Date_1]
      ,[Key_PSID_Date_1])

	  select [Unique ID]
      ,[HR System]
      ,[Employee ID]
      ,[Title]
      ,[Formal Forename]
      ,[Preferred Forename]
      ,[Middle Names]
      ,[Surname]
      ,[Business Title]
      ,[Corporate Title]
      ,[Work Email Address]
      ,[Office Telephone Number]
      ,[Accredited Service Date]
      ,[Contract End Date]
      ,[Continuous Service (Yrs)]
      ,[Snapshot Month]
      ,[Core / Non Core]
      ,[Division]
      ,[SubDivision 1]
      ,[SubDivision 2]
      ,[SubDivision 3]
      ,[SubDivision 4]
      ,[SubDivision 5]
      ,[SubDivision 6]
      ,[SubDivision 7]
      ,[Cost Centre]
      ,[Cost Centre Name]
      ,[Global Cost Centre]
      ,[Legal Entity]
      ,[RBS Structural Region]
      ,[Work Location Code]
      ,[Work Location - Floor]
      ,[Work Location - Address 1]
      ,[Work Location - Address 2]
      ,[Work Location - Address 3]
      ,[Work Location - Address 4]
      ,[Work Location - Post Code]
      ,[Work Location - Country]
      ,[Work Location - Depot]
      ,[Gender Code]
      ,[Job Code]
      ,[Job Entry Date]
      ,[Manager Level]
      ,[Class]
      ,[Full/Part Time]
      ,[Permanent / FTC]
      ,[Active/ InActive]
      ,[Function Code]
      ,[Function]
      ,[Line Manager ID]
      ,[Line Manager First Name]
      ,[Line Manager Surname]
      ,[Line Manager E-mail]
      ,[FTE]
      ,[FTE Count]
      ,[Date_1]
      ,[Key_CostCenter_Date_1]
      ,[Key_PSID_Date_1]
  FROM MCPCEC_BI..[tblheadcountPeoplesoft]
   Where convert(varchar(10),Date_1,126)=(select convert(varchar(10),max([Date_1]),126) 
	  from MCPCEC_BI..[tblheadcountPeoplesoft])
	  ---tblPeopleSoftRegionmapping
	  Truncate table tblPeopleSoftRegionmapping;
	  Insert into tblPeopleSoftRegionmapping([Work Location - Country]
      ,[Region])
     Select [Work Location - Country]
      ,[Region]
       FROM [MCPCEC_BI]..[tblPeopleSoftRegionmapping]


	   ---tblCCmapping

	   Truncate table tblCCmapping;

	   Insert into tblCCmapping([Khalix Symbol]
      ,[Business Hierarchy Level 3]
      ,[Business Hierarchy Level 4]
      ,[Date_1]
      ,[Key_Khalix_Date_1])
	  Select [Khalix Symbol]
      ,[Business Hierarchy Level 3]
      ,[Business Hierarchy Level 4]
      ,[Date_1]
      ,[Key_Khalix_Date_1]
	  From MCPCEC_BI..tblCCmapping
	  Where convert(varchar(10),Date_1,126)=(select convert(varchar(10),max([Date_1]),126) 
	  from MCPCEC_BI..tblCCmapping)


	  --tblrolecoreskillpeoplsoft
	  Truncate table tblrolecoreskillpeoplsoft;
	  Insert into tblrolecoreskillpeoplsoft(
	  [Employee ID]
      ,[Forename]
      ,[Surname]
      ,[Status]
      ,[E-Mail Address]
      ,[Role Description]
      ,[Effective Date]
      ,[Role Experience Rating]
      ,[Role Core Skill Description]
      ,[Role Core Skill Proficiency]
      ,[Employee Class]
      ,[Division]
      ,[SubDivision 1]
      ,[SubDivision 2]
      ,[SubDivision 3]
      ,[SubDivision 4]
      ,[Cost Centre]
      ,[Description]
      ,[Location]
      ,[Location Description]
      ,[Address1]
      ,[Address2]
      ,[Address3]
      ,[City]
      ,[Country]
      ,[Age Band]
      ,[Job Code]
      ,[Job Entry Date]
      ,[Continuous Service (Yrs)]
      ,[Manager Level]
      ,[Line Manager ID]
      ,[Line Manager Name]
      ,[Date_1]
      ,[Key_CostCenter_Date_1]
      ,[Key_PSID_Date_1]
      ,[People Exclusions])
	  Select [Employee ID]
      ,[Forename]
      ,[Surname]
      ,[Status]
      ,[E-Mail Address]
      ,[Role Description]
      ,[Effective Date]
      ,[Role Experience Rating]
      ,[Role Core Skill Description]
      ,[Role Core Skill Proficiency]
      ,[Employee Class]
      ,[Division]
      ,[SubDivision 1]
      ,[SubDivision 2]
      ,[SubDivision 3]
      ,[SubDivision 4]
      ,[Cost Centre]
      ,[Description]
      ,[Location]
      ,[Location Description]
      ,[Address1]
      ,[Address2]
      ,[Address3]
      ,[City]
      ,[Country]
      ,[Age Band]
      ,[Job Code]
      ,[Job Entry Date]
      ,[Continuous Service (Yrs)]
      ,[Manager Level]
      ,[Line Manager ID]
      ,[Line Manager Name]
      ,[Date_1]
      ,[Key_CostCenter_Date_1]
      ,[Key_PSID_Date_1]
      ,[People Exclusions]
  FROM [MCPCEC_BI]..[tblrolecoreskillpeoplsoft]
  Where convert(varchar(10),Date_1,126)=(select convert(varchar(10),max([Date_1]),126) 
	  from MCPCEC_BI..[tblrolecoreskillpeoplsoft])

	  ---tblPMMilestones
	  Truncate table [tblPMMilestones];

	  Insert into [tblPMMilestones]([Programme/Project]
      ,[Milestone ID]
      ,[Milestone ]
      ,[RAG]
      ,[Milestone Level]
      ,[Key Milestone]
      ,[Baseline]
      ,[Schedule]
      ,[Actual]
      ,[Variance]
      ,[Milestone_Commentary]
      ,[Comments]
      ,[Milestone Category]
      ,[Business Area Impacted]
      ,[Date_1])
  SELECT [Programme/Project]
      ,[Milestone ID]
      ,[Milestone ]
      ,[RAG]
      ,[Milestone Level]
      ,[Key Milestone]
      ,[Baseline]
      ,[Schedule]
      ,[Actual]
      ,[Variance]
      ,[Milestone_Commentary]
      ,[Comments]
      ,[Milestone Category]
      ,[Business Area Impacted]
      ,[Date_1]
  FROM MCPCEC_BI..[tblPMMilestones]
  Where convert(varchar(10),Date_1,126)=(select convert(varchar(10),max([Date_1]),126) 
	  from MCPCEC_BI..[tblPMMilestones])

---tblPMRisk
truncate table tblPMRisk;
Insert into tblPMRisk([Company]
      ,[Division]
      ,[Sub Division]
      ,[Department]
      ,[Unit Portfolio]
      ,[Programme]
      ,[Sub Programme]
      ,[Work ID]
      ,[Programme / Project]
      ,[Project Manager]
      ,[Work _Item Planning Code]
      ,[Work Item]
      ,[CRI ID]
      ,[Risk Title]
      ,[Description]
      ,[CRI Status]
      ,[Esc Level]
      ,[CRI Type]
      ,[Days Open]
      ,[Owner]
      ,[Initiated By]
      ,[Initiated date]
      ,[Checkpoint Date]
      ,[Target Closure Date]
      ,[Date Closed]
      ,[Strategy]
      ,[Current Mitigation Impact Heatmap _Colour]
      ,[Risk Action Summary]
      ,[Post Mitigation Impact _Heatmap _Colour]
      ,[Closure Information]
      ,[CRI Theme]
      ,[Date_1])
	  Select [Company]
      ,[Division]
      ,[Sub Division]
      ,[Department]
      ,[Unit Portfolio]
      ,[Programme]
      ,[Sub Programme]
      ,[Work ID]
      ,[Programme / Project]
      ,[Project Manager]
      ,[Work _Item Planning Code]
      ,[Work Item]
      ,[CRI ID]
      ,[Risk Title]
      ,[Description]
      ,[CRI Status]
      ,[Esc Level]
      ,[CRI Type]
      ,[Days Open]
      ,[Owner]
      ,[Initiated By]
      ,[Initiated date]
      ,[Checkpoint Date]
      ,[Target Closure Date]
      ,[Date Closed]
      ,[Strategy]
      ,[Current Mitigation Impact Heatmap _Colour]
      ,[Risk Action Summary]
      ,[Post Mitigation Impact _Heatmap _Colour]
      ,[Closure Information]
      ,[CRI Theme]
      ,[Date_1]
	   FROM MCPCEC_BI..tblPMRisk
  Where convert(varchar(10),Date_1,126)=(select convert(varchar(10),max([Date_1]),126) 
	  from MCPCEC_BI..tblPMRisk) 

	  --tblPMIssues

	  Truncate table tblPMIssues;
	  Insert into tblPMIssues([Sub Division]
      ,[Company]
      ,[Department]
      ,[Unit Portfolio]
      ,[Programme]
      ,[Sub Programme]
      ,[Work ID]
      ,[Programme / Project]
      ,[Project Manager]
      ,[Work _Item Planning Code]
      ,[Work Item]
      ,[CRI ID]
      ,[Issue Title]
      ,[Description]
      ,[CRI Status]
      ,[Esc# Level]
      ,[Days Open]
      ,[Owner]
      ,[Initiated By]
      ,[Initiated date]
      ,[Checkpoint Date]
      ,[Target Closure Date]
      ,[Date Closed]
      ,[Issue Action Summary]
      ,[Issue Financial Value]
      ,[Issue Impact  Rating]
      ,[Closure Information]
      ,[CRI Theme]
      ,[Date_1])

	  SELECT
	  [Sub Division]
      ,[Company]
      ,[Department]
      ,[Unit Portfolio]
      ,[Programme]
      ,[Sub Programme]
      ,[Work ID]
      ,[Programme / Project]
      ,[Project Manager]
      ,[Work _Item Planning Code]
      ,[Work Item]
      ,[CRI ID]
      ,[Issue Title]
      ,[Description]
      ,[CRI Status]
      ,[Esc# Level]
      ,[Days Open]
      ,[Owner]
      ,[Initiated By]
      ,[Initiated date]
      ,[Checkpoint Date]
      ,[Target Closure Date]
      ,[Date Closed]
      ,[Issue Action Summary]
      ,[Issue Financial Value]
      ,[Issue Impact  Rating]
      ,[Closure Information]
      ,[CRI Theme]
      ,[Date_1]
  FROM MCPCEC_BI..[tblPMIssues]
  Where convert(varchar(10),Date_1,126)=(select convert(varchar(10),max([Date_1]),126) 
	  from MCPCEC_BI..[tblPMIssues]) 

	  ---tblTOHR
	  truncate table tblTOHR;
	  INSERT into tblTOHR(
	  [Issue_ID]
      ,[Organisation_Level_6]
      ,[Issue_Type]
      ,[Issue_Source]
      ,[Issue_Status]
      ,[Impact_Rating]
      ,[Issue_Name]
      ,[Summary_Description]
      ,[Detailed_Description]
      ,[Executive_Responsible]
      ,[Issue_Owner_Name]
      ,[Created_Date]
      ,[Original_Target_Completion_Date]
      ,[Close_Target_Completion_Date]
      ,[Target_Completion_Date]
      ,[Revised_Target_Completion_Date]
      ,[Completion_Date]
      ,[Organisation_Level_4]
      ,[Organisation_Level_5]
      ,[Policy_Issue]
      ,[Policy_Standard]
      ,[Policy_Owning_Area]
      ,[RBS_Division]
      ,[Organisation_Level_3]
      ,[Location_Level_1]
      ,[Location_Level_2]
      ,[Location_Level_3]
      ,[Location_Level_4]
      ,[Location_Level_5]
      ,[Location_Level_6]
      ,[Organisation_Level_7]
      ,[Organisation_Level_8]
      ,[Accepted_Status]
      ,[Last_Updated_Date]
      ,[flgClosedPendReview]
      ,[LAST_UPDATE_USER_RK]
      ,[count_ext_due_date_change]
      ,[Past_Coming_Due_Days]
      ,[SoxRelevance]
      ,[LastComments]
      ,[Approval_Date]
      ,[Publication_Date]
      ,[Source_Reference]
      ,[Organisation_Level_10]
      ,[Source_Date]
      ,[Accepted_Date]
      ,[Cross_Divisional_Level1]
      ,[Cross_Divisional_Level2]
      ,[Cross_Divisional_Level3]
      ,[Cross_Divisional_Level4]
      ,[Previous_Impact_Rating]
      ,[Source_Name]
      ,[Organisation_Level_9]
      ,[FirmWideRiskTaxonomy_Level1]
      ,[FirmWideRiskTaxonomy_Level2]
      ,[Approval_Date1]
      ,[Accepted_Until]
      ,[Issue_Workflow_Owner]
      ,[Past_Due_Category]
      ,[Policy]
      ,[FirmWideRiskTaxonomy_Level3]
      ,[Actual_Due_Date]
      ,[Policy_Breach]
      ,[Date_1]
      ,[Key_GELID_Date_1])
SELECT   [Issue_ID]
      ,[Organisation_Level_6]
      ,[Issue_Type]
      ,[Issue_Source]
      ,[Issue_Status]
      ,[Impact_Rating]
      ,[Issue_Name]
      ,[Summary_Description]
      ,[Detailed_Description]
      ,[Executive_Responsible]
      ,[Issue_Owner_Name]
      ,[Created_Date]
      ,[Original_Target_Completion_Date]
      ,[Close_Target_Completion_Date]
      ,[Target_Completion_Date]
      ,[Revised_Target_Completion_Date]
      ,[Completion_Date]
      ,[Organisation_Level_4]
      ,[Organisation_Level_5]
      ,[Policy_Issue]
      ,[Policy_Standard]
      ,[Policy_Owning_Area]
      ,[RBS_Division]
      ,[Organisation_Level_3]
      ,[Location_Level_1]
      ,[Location_Level_2]
      ,[Location_Level_3]
      ,[Location_Level_4]
      ,[Location_Level_5]
      ,[Location_Level_6]
      ,[Organisation_Level_7]
      ,[Organisation_Level_8]
      ,[Accepted_Status]
      ,[Last_Updated_Date]
      ,[flgClosedPendReview]
      ,[LAST_UPDATE_USER_RK]
      ,[count_ext_due_date_change]
      ,[Past_Coming_Due_Days]
      ,[SoxRelevance]
      ,[LastComments]
      ,[Approval_Date]
      ,[Publication_Date]
      ,[Source_Reference]
      ,[Organisation_Level_10]
      ,[Source_Date]
      ,[Accepted_Date]
      ,[Cross_Divisional_Level1]
      ,[Cross_Divisional_Level2]
      ,[Cross_Divisional_Level3]
      ,[Cross_Divisional_Level4]
      ,[Previous_Impact_Rating]
      ,[Source_Name]
      ,[Organisation_Level_9]
      ,[FirmWideRiskTaxonomy_Level1]
      ,[FirmWideRiskTaxonomy_Level2]
      ,[Approval_Date1]
      ,[Accepted_Until]
      ,[Issue_Workflow_Owner]
      ,[Past_Due_Category]
      ,[Policy]
      ,[FirmWideRiskTaxonomy_Level3]
      ,[Actual_Due_Date]
      ,[Policy_Breach]
      ,[Date_1]
      ,[Key_GELID_Date_1]
  FROM MCPCEC_BI..tblTOHR
  Where convert(varchar(10),Date_1,126)=(select convert(varchar(10),max([Date_1]),126) 
	  from MCPCEC_BI..tblTOHR) 


----tblDLP
Truncate table tblDLP;
Insert into tblDLP([Type]
      ,[Message Status]
      ,[Severity]
      ,[Sent]
      ,[ID]
      ,[Policy]
      ,[Matches]
      ,[Subject]
      ,[Sender]
      ,[Recipient(s)]
      ,[Status]
      ,[Status Category]
      ,[Has Attachment]
      ,[Data Owner Name]
      ,[Data Owner Email]
      ,[Last Name]
      ,[Country]
      ,[Region]
      ,[Cost Centre Code]
      ,[GRG]
      ,[Manager First Name]
      ,[Manager Last Name]
      ,[Manager Email]
      ,[Assigned Reviewer]
      ,[First Name]
      ,[Cost Centre Description]
      ,[Data compromises RBS]
      ,[Notification Email]
      ,[HR Sub Division]
      ,[Manager Authorised Sending]
      ,[Recent Leaver or Leaving soon]
      ,[Proprietary Information]
      ,[Date_1]
      ,[Khalix Code])
	  Select [Type]
      ,[Message Status]
      ,[Severity]
      ,[Sent]
      ,[ID]
      ,[Policy]
      ,[Matches]
      ,[Subject]
      ,[Sender]
      ,[Recipient(s)]
      ,[Status]
      ,[Status Category]
      ,[Has Attachment]
      ,[Data Owner Name]
      ,[Data Owner Email]
      ,[Last Name]
      ,[Country]
      ,[Region]
      ,[Cost Centre Code]
      ,[GRG]
      ,[Manager First Name]
      ,[Manager Last Name]
      ,[Manager Email]
      ,[Assigned Reviewer]
      ,[First Name]
      ,[Cost Centre Description]
      ,[Data compromises RBS]
      ,[Notification Email]
      ,[HR Sub Division]
      ,[Manager Authorised Sending]
      ,[Recent Leaver or Leaving soon]
      ,[Proprietary Information]
      ,[Date_1]
      ,[Khalix Code]
  FROM [MCPCEC_BI]..[tblDLP]
  Where convert(varchar(10),Date_1,126)=(select convert(varchar(10),max([Date_1]),126) 
	  from [MCPCEC_BI]..[tblDLP]) 


	  ---TOHRTable

	  truncate table TOHRTable;
	  Insert into TOHRTable([Issue ID]
      ,[Organisation Level 6 (Issue)(function)]
      ,[Issue Type]
      ,[Issue Source]
      ,[Issue Status]
      ,[Impact Rating]
      ,[Issue Name]
      ,[Summary Description (Issue)]
      ,[Detailed Description (Issue)]
      ,[Executive Responsible]
      ,[Issue Owner Name (Issue)]
      ,[Created Date (Issue)]
      ,[Original Target Completion Date (Issue)]
      ,[Close Target Completion Date]
      ,[Target Completion Date (Issue)]
      ,[Revised Target Completion Date (Issue)]
      ,[Completion Date (Issue) (Issue)]
      ,[Organisation Level 4 (Issue)]
      ,[Organisation Level 5 (Issue)]
      ,[Policy (Issue)]
      ,[Policy Standard (Issue)]
      ,[Policy Owning Area]
      ,[RBS Division ]
      ,[Organisation Level 3 (Issue)]
      ,[Location Level 1 (Issue)]
      ,[Location Level 2 (Issue)]
      ,[Location Level 3 (Issue)]
      ,[Location Level 4 (Issue)]
      ,[Location Level 5 (Issue)]
      ,[Location Level 6 (Issue)]
      ,[Organisation Level 7 (Issue)]
      ,[Organisation Level 8 (Issue)]
      ,[Accepted Status]
      ,[Last Updated Date (Issue)]
      ,[flgClosedPendReview]
      ,[LAST_UPDATE_USER_RK]
      ,[count_ext_due_date_change]
      ,[Past/Coming Due Days]
      ,[SoxRelevance]
      ,[LastComments]
      ,[Approval Date (Issue)]
      ,[Publication Date (Issue)]
      ,[Source Reference]
      ,[Organisation Level 10 (Issue)]
      ,[Source Date (Issue)]
      ,[Accepted Date (Issue)]
      ,[Cross Divisional Level1]
      ,[Cross Divisional Level2]
      ,[Cross Divisional Level3]
      ,[Cross Divisional Level4]
      ,[Previous Impact Rating]
      ,[Source Name]
      ,[Organisation Level 9 (Issue)]
      ,[Approval Date (Issue)1]
      ,[Accepted Until (Issue)]
      ,[Issue Workflow Owner]
      ,[Past Due Category]
      ,[Policy ]
      ,[FirmWideRiskTaxonomy Level1]
      ,[FirmWideRiskTaxonomy Level2]
      ,[FirmWideRiskTaxonomy Level3]
      ,[Actual Due Date (Issue)]
      ,[Policy Breach]
      ,[Material Risk]
      ,[SLT]
      ,[Region]
      ,[Date_1])
SELECT [Issue ID]
      ,[Organisation Level 6 (Issue)(function)]
      ,[Issue Type]
      ,[Issue Source]
      ,[Issue Status]
      ,[Impact Rating]
      ,[Issue Name]
      ,[Summary Description (Issue)]
      ,[Detailed Description (Issue)]
      ,[Executive Responsible]
      ,[Issue Owner Name (Issue)]
      ,[Created Date (Issue)]
      ,[Original Target Completion Date (Issue)]
      ,[Close Target Completion Date]
      ,[Target Completion Date (Issue)]
      ,[Revised Target Completion Date (Issue)]
      ,[Completion Date (Issue) (Issue)]
      ,[Organisation Level 4 (Issue)]
      ,[Organisation Level 5 (Issue)]
      ,[Policy (Issue)]
      ,[Policy Standard (Issue)]
      ,[Policy Owning Area]
      ,[RBS Division ]
      ,[Organisation Level 3 (Issue)]
      ,[Location Level 1 (Issue)]
      ,[Location Level 2 (Issue)]
      ,[Location Level 3 (Issue)]
      ,[Location Level 4 (Issue)]
      ,[Location Level 5 (Issue)]
      ,[Location Level 6 (Issue)]
      ,[Organisation Level 7 (Issue)]
      ,[Organisation Level 8 (Issue)]
      ,[Accepted Status]
      ,[Last Updated Date (Issue)]
      ,[flgClosedPendReview]
      ,[LAST_UPDATE_USER_RK]
      ,[count_ext_due_date_change]
      ,[Past/Coming Due Days]
      ,[SoxRelevance]
      ,[LastComments]
      ,[Approval Date (Issue)]
      ,[Publication Date (Issue)]
      ,[Source Reference]
      ,[Organisation Level 10 (Issue)]
      ,[Source Date (Issue)]
      ,[Accepted Date (Issue)]
      ,[Cross Divisional Level1]
      ,[Cross Divisional Level2]
      ,[Cross Divisional Level3]
      ,[Cross Divisional Level4]
      ,[Previous Impact Rating]
      ,[Source Name]
      ,[Organisation Level 9 (Issue)]
      ,[Approval Date (Issue)1]
      ,[Accepted Until (Issue)]
      ,[Issue Workflow Owner]
      ,[Past Due Category]
      ,[Policy ]
      ,[FirmWideRiskTaxonomy Level1]
      ,[FirmWideRiskTaxonomy Level2]
      ,[FirmWideRiskTaxonomy Level3]
      ,[Actual Due Date (Issue)]
      ,[Policy Breach]
      ,[Material Risk]
      ,[SLT]
      ,[Region]
      ,[Date_1]
  FROM [MCPCEC_BI]..[TOHRTable]
  Where convert(varchar(10),[Date_1],126)=(select convert(varchar(10),max([Date_1]),126) 
	  from [MCPCEC_BI]..[TOHRTable]) 

	  --tblP2PVendor_OS

	  Truncate table tblP2PVendor_OS;
	  Insert into tblP2PVendor_OS(
	  [SupplierParentName]
      ,[SupplierSupplierName]
      ,[Normalised_Supplier]
      ,[New_Category_Alignment_Team]
      ,[New_Category_Level_1]
      ,[New_Category_Level_2]
      ,[Cost_Centre]
      ,[CostCentreName]
      ,[CompanyLevel0]
      ,[Tag]
      ,[CompanyLevel1]
      ,[CompanyLevel2]
      ,[CompanyLevel3]
      ,[CompanyLevel4]
      ,[Yearr]
      ,[Monthh]
      ,[SupClass]
      ,[CompliantToClass]
      ,[CompliantToP2P]
      ,[SumOfTotal]
      ,[Records]
      ,[SupplierID]
      ,[Original_CCY]
      ,[Original_CCY_Amount]
      ,[Region]
      ,[Country]
      ,[GL_Name]
      ,[GL_Id]
      ,[Inv_PO_ID]
      ,[Source1]
      ,[Local_Cost_Centre_Name]
      ,[Local_Cost_Centre]
      ,[Date_1])
	  SELECT [SupplierParentName]
      ,[SupplierSupplierName]
      ,[Normalised_Supplier]
      ,[New_Category_Alignment_Team]
      ,[New_Category_Level_1]
      ,[New_Category_Level_2]
      ,[Cost_Centre]
      ,[CostCentreName]
      ,[CompanyLevel0]
      ,[Tag]
      ,[CompanyLevel1]
      ,[CompanyLevel2]
      ,[CompanyLevel3]
      ,[CompanyLevel4]
      ,[Yearr]
      ,[Monthh]
      ,[SupClass]
      ,[CompliantToClass]
      ,[CompliantToP2P]
      ,[SumOfTotal]
      ,[Records]
      ,[SupplierID]
      ,[Original_CCY]
      ,[Original_CCY_Amount]
      ,[Region]
      ,[Country]
      ,[GL_Name]
      ,[GL_Id]
      ,[Inv_PO_ID]
      ,[Source1]
      ,[Local_Cost_Centre_Name]
      ,[Local_Cost_Centre]
      ,[Date_1]
  FROM [MCPCEC_BI].[dbo].[tblP2PVendor_OS]
  Where convert(varchar(10),[Date_1],126)=(select convert(varchar(10),max([Date_1]),126) 
	  from [MCPCEC_BI]..[tblP2PVendor_OS]) 

	  ---tblVendor
	  Truncate table tblVendorNew;
	  Insert into tblVendorNew([ID]
      ,[Vendor Name]
      ,[Contract Manager]
      ,[Contract Manager Assigned]
      ,[Contract ID]
      ,[SLT]
      ,[Tier]
      ,[SIA]
      ,[Contract Type]
      ,[Start Date]
      ,[Expiry Date]
      ,[Renewal Calendar]
      ,[Contract Not in Place]
      ,[SIA Not in Place]
      ,[Contract Owner Not Assigned]
      ,[Contracts overdue for renewal]
      ,[Contract Manager Region]
      ,[Contract Denom]
      ,[Contract Manager SLT]
      ,[Contract Status]
      ,[Date_1])
	  SELECT [ID]
      ,[Vendor Name]
      ,[Contract Manager]
      ,[Contract Manager Assigned]
      ,[Contract ID]
      ,[SLT]
      ,[Tier]
      ,[SIA]
      ,[Contract Type]
      ,[Start Date]
      ,[Expiry Date]
      ,[Renewal Calendar]
      ,[Contract Not in Place]
      ,[SIA Not in Place]
      ,[Contract Owner Not Assigned]
      ,[Contracts overdue for renewal]
      ,[Contract Manager Region]
      ,[Contract Denom]
      ,[Contract Manager SLT]
      ,[Contract Status]
      ,[Date_1]
	  FROM [MCPCEC_BI]..[tblVendorNew]
  Where convert(varchar(10),[Date_1],126)=(select convert(varchar(10),max([Date_1]),126) 
	  from [MCPCEC_BI]..[tblVendorNew]) 

	  ----tblCostCentreSLTRegionMapping
	  Truncate table tblCostCentreSLTRegionMapping;
	  Insert into tblCostCentreSLTRegionMapping([Khalix Symbol]
      ,[Business Hierarchy Level 3]
      ,[Business Hierarchy Level 4]
      ,[Region]
      ,[OU]
      ,[Date_1])
	  SELECT
	  [Khalix Symbol]
      ,[Business Hierarchy Level 3]
      ,[Business Hierarchy Level 4]
      ,[Region]
      ,[OU]
      ,[Date_1]
  FROM [MCPCEC_BI]..[tblCostCentreSLTRegionMapping]
   Where convert(varchar(10),[Date_1],126)=(select convert(varchar(10),max([Date_1]),126) 
	  from [MCPCEC_BI]..[tblCostCentreSLTRegionMapping]) 

---[tblEmailsSentForPhishingTest]
Truncate table [tblEmailsSentForPhishingTest];
Insert into [tblEmailsSentForPhishingTest]([firstName]
      ,[lastName]
      ,[emailAddress]
      ,[Division]
      ,[SubDiv1]
      ,[SubDiv2]
      ,[SubDiv3]
      ,[SubDiv4]
      ,[SubDiv5]
      ,[SubDiv6]
      ,[Region]
      ,[Country]
      ,[Date_1])
Select [firstName]
      ,[lastName]
      ,[emailAddress]
      ,[Division]
      ,[SubDiv1]
      ,[SubDiv2]
      ,[SubDiv3]
      ,[SubDiv4]
      ,[SubDiv5]
      ,[SubDiv6]
      ,[Region]
      ,[Country]
      ,[Date_1]
  FROM [MCPCEC_BI]..[tblEmailsSentForPhishingTest]
   Where convert(varchar(10),[Date_1],126)=(select convert(varchar(10),max([Date_1]),126) 
	  from [MCPCEC_BI]..tblEmailsSentForPhishingTest)  


	  ----tblEmailsClickedUnderPhishingTest
	  truncate table tblEmailsClickedUnderPhishingTest;
	  Insert into tblEmailsClickedUnderPhishingTest(
	  [Received Date]
      ,[Remote IP]
      ,[Type]
      ,[Recipient]
      ,[First Name]
      ,[Last Name]
      ,[Device Type]
      ,[Platform]
      ,[Browser]
      ,[Division]
      ,[SubDiv1]
      ,[SubDiv2]
      ,[SubDiv3]
      ,[SubDiv4]
      ,[SubDiv5]
      ,[Region]
      ,[Country]
      ,[Date_1])
	  SELECT  [Received Date]
      ,[Remote IP]
      ,[Type]
      ,[Recipient]
      ,[First Name]
      ,[Last Name]
      ,[Device Type]
      ,[Platform]
      ,[Browser]
      ,[Division]
      ,[SubDiv1]
      ,[SubDiv2]
      ,[SubDiv3]
      ,[SubDiv4]
      ,[SubDiv5]
      ,[Region]
      ,[Country]
      ,[Date_1]
 FROM [MCPCEC_BI]..tblEmailsClickedUnderPhishingTest
   Where convert(varchar(10),[Date_1],126)=(select convert(varchar(10),max([Date_1]),126) 
	  from [MCPCEC_BI]..tblEmailsClickedUnderPhishingTest)  


----tblVacancies
Truncate table tblVacancies;
Insert into tblVacancies([Job_Opening_ID]
      ,[Posting_Title]
      ,[Vacancy_Status]
      ,[Target_Openings]
      ,[Hired]
      ,[Openings_Remaining]
      ,[Offer_and_Beyond]
      ,[Active_Openings]
      ,[Candidates_Attracted]
      ,[Primary_Recruiter]
      ,[Hiring_Manager]
      ,[Segment_Job_Cluster]
      ,[Job_Level]
      ,[Externally_Internally_Advertised]
      ,[Region]
      ,[Country]
      ,[City]
      ,[Division]
      ,[Sub_Division_1]
      ,[Sub_Division_2]
      ,[Sub_Division_3]
      ,[Sub_Division_4]
      ,[Cost_Centre]
      ,[Opened_Date]
      ,[Cancelled_Closed_Date]
      ,[Date_1])
SELECT
	  [Job_Opening_ID]
      ,[Posting_Title]
      ,[Vacancy_Status]
      ,[Target_Openings]
      ,[Hired]
      ,[Openings_Remaining]
      ,[Offer_and_Beyond]
      ,[Active_Openings]
      ,[Candidates_Attracted]
      ,[Primary_Recruiter]
      ,[Hiring_Manager]
      ,[Segment_Job_Cluster]
      ,[Job_Level]
      ,[Externally_Internally_Advertised]
      ,[Region]
      ,[Country]
      ,[City]
      ,[Division]
      ,[Sub_Division_1]
      ,[Sub_Division_2]
      ,[Sub_Division_3]
      ,[Sub_Division_4]
      ,[Cost_Centre]
      ,[Opened_Date]
      ,[Cancelled_Closed_Date]
      ,[Date_1]
   FROM [MCPCEC_BI]..tblVacancies
   Where convert(varchar(10),[Date_1],126)=(select convert(varchar(10),max([Date_1]),126) 
	  from [MCPCEC_BI]..tblVacancies)  
  


--------------------


------Important-----
---Update AppManager Region using peoplesoft and costcenter slt-region mapping
Update TApps set TApps.[AppManagerRegion]=ltrim(rtrim(TCCM.[Region]))
 from tblAllapps TApps join tblheadcountPeoplesoft TPS on 
ltrim(rtrim(TApps.[AppManagerEmail]))=ltrim(rtrim(TPS.[Work Email Address]))
left outer join tblCostCentreSLTRegionMapping TCCM on 
ltrim(rtrim(TPS.[Global Cost Centre]))=ltrim(rtrim(TCCM.[Khalix Symbol]));

-----------------------

END
GO
/****** Object:  StoredProcedure [dbo].[sp_helptext2]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_helptext2] (@ProcName NVARCHAR(256))
AS
BEGIN
  DECLARE @PROC_TABLE TABLE (X1  NVARCHAR(MAX))

  DECLARE @Proc NVARCHAR(MAX)
  DECLARE @Procedure NVARCHAR(MAX)
  DECLARE @ProcLines TABLE (PLID INT IDENTITY(1,1), Line NVARCHAR(MAX))

  SELECT @Procedure = 'SELECT DEFINITION FROM '+db_name()+'.SYS.SQL_MODULES WHERE OBJECT_ID = OBJECT_ID('''+@ProcName+''')'

  insert into @PROC_TABLE (X1)
        exec  (@Procedure)

  SELECT @Proc=X1 from @PROC_TABLE

  WHILE CHARINDEX(CHAR(13)+CHAR(10),@Proc) > 0
  BEGIN
        INSERT @ProcLines
        SELECT LEFT(@Proc,CHARINDEX(CHAR(13)+CHAR(10),@Proc)-1)
        SELECT @Proc = SUBSTRING(@Proc,CHARINDEX(CHAR(13)+CHAR(10),@Proc)+2,LEN(@Proc))
  END
 --* inserts last line
 insert @ProcLines 
 select @Proc ;

 --edited here. (where Line<>'')
 SELECT Line FROM @ProcLines where Line<>'' ORDER BY PLID
END
GO
/****** Object:  Table [dbo].[tblAllapps]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblAllapps](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[GEL ID] [float] NOT NULL,
	[Tech Division] [nvarchar](255) NULL,
	[Unit] [nvarchar](255) NULL,
	[Department] [nvarchar](255) NULL,
	[System Location] [nvarchar](255) NULL,
	[System] [nvarchar](255) NULL,
	[Location] [nvarchar](255) NULL,
	[GEL Status] [nvarchar](255) NULL,
	[UnitHead] [nvarchar](255) NULL,
	[DeptHead] [nvarchar](255) NULL,
	[TeamHead] [nvarchar](255) NULL,
	[Prod] [nvarchar](max) NULL,
	[Contingency] [nvarchar](255) NULL,
	[ARMEnabled] [nvarchar](255) NULL,
	[Group RTO] [nvarchar](255) NULL,
	[Record Type] [nvarchar](255) NULL,
	[CWSurvey Compliance %] [float] NULL,
	[Last Test] [datetime] NULL,
	[Last Test  / Scheduled Test Date] [datetime] NULL,
	[Last Result] [nvarchar](255) NULL,
	[Governance Expiry Date] [datetime] NULL,
	[No Days Remaining] [int] NULL,
	[DR Test Missed] [nvarchar](255) NULL,
	[DR Doc Uploaded in GEL] [nvarchar](255) NULL,
	[Out of Governance] [nvarchar](255) NULL,
	[CIA Rating] [nvarchar](255) NULL,
	[CIA Upload Date] [datetime] NULL,
	[iUER Status] [int] NULL,
	[Gel Status Date] [datetime] NULL,
	[Capacity RAG] [nvarchar](255) NULL,
	[Uptime] [int] NULL,
	[Team] [nvarchar](255) NULL,
	[Unplanned CRs] [int] NULL,
	[Unplanned Changes] [int] NULL,
	[CRs] [int] NULL,
	[Changes] [int] NULL,
	[Incident Count] [int] NULL,
	[Sev1] [int] NULL,
	[Sev2] [int] NULL,
	[Clockwork Compliance] [nvarchar](255) NULL,
	[Development Contact] [nvarchar](255) NULL,
	[Support Contact] [nvarchar](max) NULL,
	[Support Mail] [nvarchar](255) NULL,
	[Update Responsibility] [nvarchar](255) NULL,
	[Infrastructure Reviewer] [nvarchar](255) NULL,
	[App Manager] [nvarchar](255) NULL,
	[AppManagerEmail] [nvarchar](255) NULL,
	[App Manager Status] [nvarchar](255) NULL,
	[SoxCriticality] [nvarchar](255) NULL,
	[RBAM Coverage] [nvarchar](255) NULL,
	[BuiltbyDesc] [nvarchar](50) NULL,
	[Sev3] [int] NULL,
	[Sev4] [int] NULL,
	[Remedy Queue Name] [nvarchar](255) NULL,
	[Customer Lens] [nvarchar](255) NULL,
	[External Use] [nvarchar](255) NULL,
	[Financial Transaction] [nvarchar](255) NULL,
	[DRAppFlag] [nvarchar](20) NULL,
	[AppManagerRegion] [nvarchar](50) NULL,
	[Date_1] [datetime] NULL,
	[Key_Unit_Date_1] [varchar](max) NULL,
	[Key_GELID_Date_1] [varchar](max) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tblAppmapping]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblAppmapping](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[Unit] [nvarchar](255) NULL,
	[Mapping] [nvarchar](255) NULL,
	[Date_1] [datetime] NULL,
	[Key_Unit_Date_1] [varchar](max) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tblCCmapping]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblCCmapping](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[Khalix Symbol] [nvarchar](255) NULL,
	[Business Hierarchy Level 3] [nvarchar](255) NULL,
	[Business Hierarchy Level 4] [nvarchar](255) NULL,
	[Date_1] [datetime] NULL,
	[Key_Khalix_Date_1] [varchar](max) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tblChange]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblChange](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[Change Number] [nvarchar](20) NULL,
	[Priority] [nvarchar](10) NULL,
	[Impact] [nvarchar](20) NULL,
	[Urgency] [nvarchar](20) NULL,
	[Change Scheduled Start] [datetime] NULL,
	[Change Scheduled End] [datetime] NULL,
	[Change Opened At] [datetime] NULL,
	[Change Closed At] [datetime] NULL,
	[Change Risk] [nvarchar](20) NULL,
	[Change State] [nvarchar](60) NULL,
	[Change Close Code] [nvarchar](max) NULL,
	[Approval] [nvarchar](30) NULL,
	[Category] [nvarchar](20) NULL,
	[Change Raiser] [nvarchar](50) NULL,
	[Change Type] [nvarchar](40) NULL,
	[Phase State] [nvarchar](10) NULL,
	[Affected Services] [nvarchar](max) NULL,
	[Catalogue Id] [float] NULL,
	[Application Instance] [nvarchar](80) NULL,
	[Gel Status] [nvarchar](30) NULL,
	[Record Type] [nvarchar](30) NULL,
	[Change Active] [nvarchar](20) NULL,
	[Applications  Affected] [nvarchar](60) NULL,
	[Chang Applied By] [nvarchar](30) NULL,
	[Change Applied Date] [datetime] NULL,
	[Apporval Deadline] [datetime] NULL,
	[Approval History] [nvarchar](2) NULL,
	[Assigned To] [nvarchar](2) NULL,
	[Assignment Group] [nvarchar](2) NULL,
	[Authoriser] [nvarchar](2) NULL,
	[Change effective From] [datetime] NULL,
	[Check Date] [datetime] NULL,
	[Checker] [nvarchar](50) NULL,
	[Checker Assigmnet Group] [nvarchar](60) NULL,
	[Checker At] [nvarchar](2) NULL,
	[CI Class] [nvarchar](50) NULL,
	[Closed By] [nvarchar](max) NULL,
	[Completion Code] [nvarchar](60) NULL,
	[CR_Due_date] [datetime] NULL,
	[Expected Start] [datetime] NULL,
	[Expedited Change] [nvarchar](30) NULL,
	[Expedited Change Justification] [nvarchar](max) NULL,
	[Failure Code] [nvarchar](60) NULL,
	[List of Franchisee] [nvarchar](2) NULL,
	[Mcr_Approval Deadline] [datetime] NULL,
	[Mcr_State] [nvarchar](50) NULL,
	[Opened By] [nvarchar](200) NULL,
	[Outage Duration] [nvarchar](60) NULL,
	[Outage Start] [datetime] NULL,
	[Outage End] [datetime] NULL,
	[Phase] [nvarchar](50) NULL,
	[Ready For Checker] [nvarchar](50) NULL,
	[Related Incident] [nvarchar](50) NULL,
	[Related Problem] [nvarchar](50) NULL,
	[Requested By] [nvarchar](60) NULL,
	[Scope] [nvarchar](30) NULL,
	[Servicess Affected] [nvarchar](80) NULL,
	[Severity Code] [nvarchar](50) NULL,
	[Short Description] [nvarchar](max) NULL,
	[App Manager Name] [nvarchar](80) NULL,
	[AppManagerRegionName] [nvarchar](20) NULL,
	[Date_1] [datetime] NULL,
	[Key_GELID_Date_1] [varchar](max) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tblCostCentreSLTRegionMapping]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblCostCentreSLTRegionMapping](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[Khalix Symbol] [nvarchar](255) NULL,
	[Business Hierarchy Level 3] [nvarchar](255) NULL,
	[Business Hierarchy Level 4] [nvarchar](255) NULL,
	[Region] [nvarchar](255) NULL,
	[OU] [nvarchar](255) NULL,
	[Date_1] [datetime] NULL
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[tblDLP]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblDLP](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[Type] [varchar](50) NULL,
	[Message Status] [varchar](50) NULL,
	[Severity] [varchar](50) NULL,
	[Sent] [datetime] NULL,
	[ID] [varchar](50) NULL,
	[Policy] [varchar](max) NULL,
	[Matches] [int] NULL,
	[Subject] [varchar](max) NULL,
	[Sender] [varchar](50) NULL,
	[Recipient(s)] [nvarchar](max) NULL,
	[Status] [varchar](50) NULL,
	[Status Category] [varchar](50) NULL,
	[Has Attachment] [char](10) NULL,
	[Data Owner Name] [varchar](50) NULL,
	[Data Owner Email] [varchar](50) NULL,
	[Last Name] [varchar](50) NULL,
	[Country] [varchar](50) NULL,
	[Region] [varchar](50) NULL,
	[Cost Centre Code] [varchar](50) NULL,
	[GRG] [varchar](50) NULL,
	[Manager First Name] [varchar](50) NULL,
	[Manager Last Name] [varchar](50) NULL,
	[Manager Email] [varchar](50) NULL,
	[Assigned Reviewer] [varchar](50) NULL,
	[First Name] [varchar](50) NULL,
	[Cost Centre Description] [varchar](50) NULL,
	[Data compromises RBS] [varchar](50) NULL,
	[Notification Email] [varchar](max) NULL,
	[HR Sub Division] [varchar](50) NULL,
	[Manager Authorised Sending] [varchar](50) NULL,
	[Recent Leaver or Leaving soon] [varchar](50) NULL,
	[Proprietary Information] [varchar](50) NULL,
	[Date_1] [datetime] NULL,
	[Khalix Code] [varchar](max) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tblEmailsClickedUnderPhishingTest]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblEmailsClickedUnderPhishingTest](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[Received Date] [nvarchar](255) NOT NULL,
	[Remote IP] [nvarchar](255) NULL,
	[Type] [nvarchar](255) NULL,
	[Recipient] [nvarchar](255) NULL,
	[First Name] [nvarchar](255) NULL,
	[Last Name] [nvarchar](255) NULL,
	[Device Type] [nvarchar](255) NULL,
	[Platform] [nvarchar](255) NULL,
	[Browser] [nvarchar](255) NULL,
	[Division] [nvarchar](255) NULL,
	[SubDiv1] [nvarchar](255) NULL,
	[SubDiv2] [nvarchar](255) NULL,
	[SubDiv3] [nvarchar](255) NULL,
	[SubDiv4] [nvarchar](255) NULL,
	[SubDiv5] [nvarchar](255) NULL,
	[Region] [nvarchar](255) NULL,
	[Country] [nvarchar](255) NULL,
	[Date_1] [datetime] NULL
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[tblEmailsSentForPhishingTest]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblEmailsSentForPhishingTest](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[firstName] [nvarchar](255) NULL,
	[lastName] [nvarchar](255) NULL,
	[emailAddress] [nvarchar](255) NULL,
	[Division] [nvarchar](255) NULL,
	[SubDiv1] [nvarchar](255) NULL,
	[SubDiv2] [nvarchar](255) NULL,
	[SubDiv3] [nvarchar](255) NULL,
	[SubDiv4] [nvarchar](255) NULL,
	[SubDiv5] [nvarchar](255) NULL,
	[SubDiv6] [nvarchar](255) NULL,
	[Region] [nvarchar](255) NULL,
	[Country] [nvarchar](255) NULL,
	[Date_1] [datetime] NULL
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[tblEOL]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblEOL](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[GEL ID] [float] NULL,
	[Hostname] [nvarchar](55) NULL,
	[HostType] [nvarchar](30) NULL,
	[ParentHostName] [nvarchar](55) NULL,
	[TeamHead] [nvarchar](60) NULL,
	[Applicaiton Manager] [nvarchar](60) NULL,
	[EOLHWRemediation] [nvarchar](60) NULL,
	[SystemStatusDesc] [nvarchar](60) NULL,
	[CatalogueRecordType] [nvarchar](60) NULL,
	[AppCIAHighestRating] [nvarchar](5) NULL,
	[AppBuySellHoldFlag] [nvarchar](5) NULL,
	[InfraEnvDescription] [nvarchar](30) NULL,
	[Date_1] [datetime] NULL,
	[Key_GELID_Date_1] [varchar](max) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tblGel]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblGel](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[GEL ID] [float] NULL,
	[Goveranance ApplicationManager] [nvarchar](255) NULL,
	[GelGovTabName] [nvarchar](255) NULL,
	[Signoff byFullname] [nvarchar](255) NULL,
	[GelGovSignoffbyEmail] [nvarchar](255) NULL,
	[GelGovSignoffbyEmployeeStatus] [nvarchar](255) NULL,
	[Catalogue RecordType] [nvarchar](255) NULL,
	[SystemStatusDesc] [nvarchar](255) NULL,
	[TabSignOffAge] [float] NULL,
	[Gel Sign Off Status] [nvarchar](255) NULL,
	[TabSignOffDate] [datetime] NULL,
	[Date_1] [datetime] NULL,
	[Key_GELID_Date_1] [varchar](max) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tblheadcountPeoplesoft]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblheadcountPeoplesoft](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[Unique ID] [nvarchar](50) NULL,
	[HR System] [nchar](10) NULL,
	[Employee ID] [float] NULL,
	[Title] [nchar](10) NULL,
	[Formal Forename] [nvarchar](max) NULL,
	[Preferred Forename] [nvarchar](max) NULL,
	[Middle Names] [nvarchar](max) NULL,
	[Surname] [nvarchar](max) NULL,
	[Business Title] [nvarchar](max) NULL,
	[Corporate Title] [nvarchar](max) NULL,
	[Work Email Address] [nvarchar](max) NULL,
	[Office Telephone Number] [varchar](max) NULL,
	[Accredited Service Date] [varchar](50) NULL,
	[Contract End Date] [varchar](50) NULL,
	[Continuous Service (Yrs)] [int] NULL,
	[Snapshot Month] [varchar](50) NULL,
	[Core / Non Core] [nvarchar](50) NULL,
	[Division] [nvarchar](max) NULL,
	[SubDivision 1] [nvarchar](max) NULL,
	[SubDivision 2] [nvarchar](max) NULL,
	[SubDivision 3] [nvarchar](max) NULL,
	[SubDivision 4] [nvarchar](max) NULL,
	[SubDivision 5] [nvarchar](max) NULL,
	[SubDivision 6] [nvarchar](max) NULL,
	[SubDivision 7] [nvarchar](max) NULL,
	[Cost Centre] [nvarchar](max) NULL,
	[Cost Centre Name] [nvarchar](max) NULL,
	[Global Cost Centre] [nvarchar](max) NULL,
	[Legal Entity] [nvarchar](max) NULL,
	[RBS Structural Region] [nvarchar](max) NULL,
	[Work Location Code] [nvarchar](50) NULL,
	[Work Location - Floor] [nvarchar](50) NULL,
	[Work Location - Address 1] [nvarchar](max) NULL,
	[Work Location - Address 2] [nvarchar](max) NULL,
	[Work Location - Address 3] [nvarchar](max) NULL,
	[Work Location - Address 4] [nvarchar](max) NULL,
	[Work Location - Post Code] [nvarchar](50) NULL,
	[Work Location - Country] [nvarchar](50) NULL,
	[Work Location - Depot] [nvarchar](50) NULL,
	[Gender Code] [nvarchar](50) NULL,
	[Job Code] [nvarchar](50) NULL,
	[Job Entry Date] [varchar](50) NULL,
	[Manager Level] [nvarchar](max) NULL,
	[Class] [nvarchar](50) NULL,
	[Full/Part Time] [nvarchar](50) NULL,
	[Permanent / FTC] [nvarchar](50) NULL,
	[Active/ InActive] [nvarchar](50) NULL,
	[Function Code] [nchar](10) NULL,
	[Function] [nchar](10) NULL,
	[Line Manager ID] [float] NULL,
	[Line Manager First Name] [nvarchar](max) NULL,
	[Line Manager Surname] [nvarchar](max) NULL,
	[Line Manager E-mail] [nvarchar](max) NULL,
	[FTE] [int] NULL,
	[FTE Count] [int] NULL,
	[Date_1] [datetime] NULL,
	[Key_CostCenter_Date_1] [varchar](max) NULL,
	[Key_PSID_Date_1] [varchar](max) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tblIncident]    Script Date: 08-09-2017 16:13:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblIncident](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[Incident Number] [nvarchar](15) NULL,
	[Priority] [nvarchar](5) NULL,
	[Impact] [nvarchar](15) NULL,
	[Urgency] [nvarchar](15) NULL,
	[Incident_Master/Child] [nvarchar](15) NULL,
	[Master Incident] [nvarchar](15) NULL,
	[Impact Start Date] [datetime] NULL,
	[Impact End Date] [datetime] NULL,
	[Opened  At] [datetime] NULL,
	[Closed  At] [datetime] NULL,
	[Incident State] [nvarchar](max) NULL,
	[Incident Manager] [nvarchar](30) NULL,
	[Affected Services] [nvarchar](max) NULL,
	[Type] [nvarchar](20) NULL,
	[Severity] [nvarchar](max) NULL,
	[Severity Level] [nvarchar](5) NULL,
	[Category] [nvarchar](50) NULL,
	[Sub Category] [nvarchar](50) NULL,
	[Business Duration] [nvarchar](50) NULL,
	[Calendar Duration] [nvarchar](50) NULL,
	[Impact Duration] [nvarchar](10) NULL,
	[Work Start] [datetime] NULL,
	[Work End] [datetime] NULL,
	[Caused  By Change] [nvarchar](60) NULL,
	[Caused  By Incident] [nvarchar](60) NULL,
	[Change Count] [nvarchar](10) NULL,
	[Change Date] [datetime] NULL,
	[Close Code] [nvarchar](50) NULL,
	[Close Sub Code] [nvarchar](50) NULL,
	[Name_CMDB] [nvarchar](max) NULL,
	[Class] [nvarchar](50) NULL,
	[Catalogue Id] [nvarchar](15) NULL,
	[Date_1] [datetime] NULL,
	[Key_GELID_Date_1] [varchar](max) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tblIncidents12Months]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblIncidents12Months](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[Incident Number] [nvarchar](15) NULL,
	[Priority] [nvarchar](5) NULL,
	[Impact] [nvarchar](15) NULL,
	[Urgency] [nvarchar](15) NULL,
	[Incident_Master/Child] [nvarchar](15) NULL,
	[Master Incident] [nvarchar](15) NULL,
	[Impact Start Date] [datetime] NULL,
	[Impact End Date] [datetime] NULL,
	[Opened  At] [datetime] NULL,
	[Closed  At] [datetime] NULL,
	[Incident State] [nvarchar](max) NULL,
	[Incident Manager] [nvarchar](30) NULL,
	[Affected Services] [nvarchar](max) NULL,
	[Type] [nvarchar](20) NULL,
	[Severity] [nvarchar](max) NULL,
	[Severity Level] [nvarchar](5) NULL,
	[Category] [nvarchar](50) NULL,
	[Sub Category] [nvarchar](50) NULL,
	[Business Duration] [nvarchar](50) NULL,
	[Calendar Duration] [nvarchar](50) NULL,
	[Impact Duration] [nvarchar](10) NULL,
	[Work Start] [datetime] NULL,
	[Work End] [datetime] NULL,
	[Caused  By Change] [nvarchar](60) NULL,
	[Caused  By Incident] [nvarchar](60) NULL,
	[Change Count] [nvarchar](10) NULL,
	[Change Date] [datetime] NULL,
	[Close Code] [nvarchar](50) NULL,
	[Close Sub Code] [nvarchar](50) NULL,
	[Name_CMDB] [nvarchar](max) NULL,
	[Class] [nvarchar](50) NULL,
	[Catalogue Id] [nvarchar](15) NULL,
	[Date_1] [datetime] NULL,
	[Key_GELID_Date_1] [varchar](max) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tblP2PVendor_OS]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblP2PVendor_OS](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[SupplierParentName] [nvarchar](255) NULL,
	[SupplierSupplierName] [nvarchar](255) NULL,
	[Normalised_Supplier] [nvarchar](255) NULL,
	[New_Category_Alignment_Team] [nvarchar](255) NULL,
	[New_Category_Level_1] [nvarchar](255) NULL,
	[New_Category_Level_2] [nvarchar](255) NULL,
	[Cost_Centre] [nvarchar](max) NULL,
	[CostCentreName] [nvarchar](max) NULL,
	[CompanyLevel0] [nvarchar](255) NULL,
	[Tag] [nvarchar](15) NULL,
	[CompanyLevel1] [nvarchar](255) NULL,
	[CompanyLevel2] [nvarchar](255) NULL,
	[CompanyLevel3] [nvarchar](255) NULL,
	[CompanyLevel4] [nvarchar](255) NULL,
	[Yearr] [nvarchar](255) NULL,
	[Monthh] [nvarchar](255) NULL,
	[SupClass] [nvarchar](255) NULL,
	[CompliantToClass] [nvarchar](255) NULL,
	[CompliantToP2P] [nvarchar](255) NULL,
	[SumOfTotal] [float] NULL,
	[Records] [int] NULL,
	[SupplierID] [nvarchar](255) NULL,
	[Original_CCY] [nvarchar](255) NULL,
	[Original_CCY_Amount] [float] NULL,
	[Region] [nvarchar](255) NULL,
	[Country] [nvarchar](255) NULL,
	[GL_Name] [nvarchar](255) NULL,
	[GL_Id] [nvarchar](255) NULL,
	[Inv_PO_ID] [nvarchar](255) NULL,
	[Source1] [nvarchar](255) NULL,
	[Local_Cost_Centre_Name] [nvarchar](255) NULL,
	[Local_Cost_Centre] [nvarchar](255) NULL,
	[Date_1] [datetime] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
/****** Object:  Table [dbo].[tblPeopleSoftRegionmapping]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblPeopleSoftRegionmapping](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[Work Location - Country] [nvarchar](max) NULL,
	[Region] [nvarchar](50) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
/****** Object:  Table [dbo].[tblphishing]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblphishing](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[Received Date] [nvarchar](255) NULL,
	[Remote IP] [nvarchar](255) NULL,
	[Type] [nvarchar](255) NULL,
	[Recipient] [nvarchar](255) NULL,
	[First Name] [nvarchar](255) NULL,
	[Last Name] [nvarchar](255) NULL,
	[Device Type] [nvarchar](255) NULL,
	[Platform] [nvarchar](255) NULL,
	[Browser] [nvarchar](255) NULL,
	[Division] [nvarchar](255) NULL,
	[SubDiv1] [nvarchar](255) NULL,
	[SubDiv2] [nvarchar](255) NULL,
	[SubDiv3] [nvarchar](255) NULL,
	[SubDiv4] [nvarchar](255) NULL,
	[SubDiv5] [nvarchar](255) NULL,
	[Date_1] [datetime] NULL
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[tblPMIssues]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblPMIssues](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[Sub Division] [nvarchar](255) NULL,
	[Company] [nvarchar](255) NULL,
	[Department] [nvarchar](255) NULL,
	[Unit Portfolio] [nvarchar](255) NULL,
	[Programme] [nvarchar](255) NULL,
	[Sub Programme] [nvarchar](255) NULL,
	[Work ID] [float] NULL,
	[Programme / Project] [nvarchar](255) NULL,
	[Project Manager] [nvarchar](255) NULL,
	[Work _Item Planning Code] [float] NULL,
	[Work Item] [nvarchar](255) NULL,
	[CRI ID] [nvarchar](255) NULL,
	[Issue Title] [nvarchar](255) NULL,
	[Description] [nvarchar](max) NULL,
	[CRI Status] [nvarchar](255) NULL,
	[Esc# Level] [float] NULL,
	[Days Open] [float] NULL,
	[Owner] [nvarchar](255) NULL,
	[Initiated By] [nvarchar](255) NULL,
	[Initiated date] [datetime] NULL,
	[Checkpoint Date] [datetime] NULL,
	[Target Closure Date] [datetime] NULL,
	[Date Closed] [nvarchar](255) NULL,
	[Issue Action Summary] [nvarchar](max) NULL,
	[Issue Financial Value] [float] NULL,
	[Issue Impact  Rating] [nvarchar](255) NULL,
	[Closure Information] [nvarchar](255) NULL,
	[CRI Theme] [nvarchar](255) NULL,
	[Date_1] [datetime] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
/****** Object:  Table [dbo].[tblPMMilestones]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblPMMilestones](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[Programme/Project] [nvarchar](255) NULL,
	[Milestone ID] [float] NULL,
	[Milestone ] [nvarchar](255) NULL,
	[RAG] [nvarchar](255) NULL,
	[Milestone Level] [float] NULL,
	[Key Milestone] [nvarchar](255) NULL,
	[Baseline] [datetime] NULL,
	[Schedule] [datetime] NULL,
	[Actual] [datetime] NULL,
	[Variance] [float] NULL,
	[Milestone_Commentary] [nvarchar](max) NULL,
	[Comments] [nvarchar](255) NULL,
	[Milestone Category] [nvarchar](255) NULL,
	[Business Area Impacted] [nvarchar](255) NULL,
	[Date_1] [datetime] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
/****** Object:  Table [dbo].[tblPMRisk]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblPMRisk](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[Company] [nvarchar](255) NULL,
	[Division] [nvarchar](255) NULL,
	[Sub Division] [nvarchar](255) NULL,
	[Department] [nvarchar](255) NULL,
	[Unit Portfolio] [nvarchar](255) NULL,
	[Programme] [nvarchar](255) NULL,
	[Sub Programme] [nvarchar](255) NULL,
	[Work ID] [float] NULL,
	[Programme / Project] [nvarchar](255) NULL,
	[Project Manager] [nvarchar](255) NULL,
	[Work _Item Planning Code] [float] NULL,
	[Work Item] [nvarchar](255) NULL,
	[CRI ID] [nvarchar](255) NULL,
	[Risk Title] [nvarchar](255) NULL,
	[Description] [nvarchar](max) NULL,
	[CRI Status] [nvarchar](255) NULL,
	[Esc Level] [float] NULL,
	[CRI Type] [nvarchar](255) NULL,
	[Days Open] [float] NULL,
	[Owner] [nvarchar](255) NULL,
	[Initiated By] [nvarchar](255) NULL,
	[Initiated date] [datetime] NULL,
	[Checkpoint Date] [datetime] NULL,
	[Target Closure Date] [datetime] NULL,
	[Date Closed] [nvarchar](255) NULL,
	[Strategy] [nvarchar](255) NULL,
	[Current Mitigation Impact Heatmap _Colour] [nvarchar](255) NULL,
	[Risk Action Summary] [nvarchar](max) NULL,
	[Post Mitigation Impact _Heatmap _Colour] [nvarchar](255) NULL,
	[Closure Information] [nvarchar](255) NULL,
	[CRI Theme] [nvarchar](255) NULL,
	[Date_1] [datetime] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
/****** Object:  Table [dbo].[tblPrblmMgmt]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblPrblmMgmt](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[Problem Number] [nvarchar](30) NULL,
	[Priority] [nvarchar](10) NULL,
	[Impact] [nvarchar](40) NULL,
	[Urgency] [nvarchar](15) NULL,
	[Problem Open At] [datetime] NULL,
	[Problem Closed At] [datetime] NULL,
	[Problem Implementation Date] [datetime] NULL,
	[Problem Due Date] [datetime] NULL,
	[Affected Services] [nvarchar](max) NULL,
	[Category] [nvarchar](max) NULL,
	[Resolution Target Date] [datetime] NULL,
	[Root Cause] [nvarchar](50) NULL,
	[Closure Code] [nvarchar](50) NULL,
	[Problem Active] [nvarchar](20) NULL,
	[CMDB CI] [nvarchar](max) NULL,
	[Catalogue Id] [nvarchar](15) NULL,
	[Problem Created By Incident] [nvarchar](60) NULL,
	[Days Taken For Root Cause] [smallint] NULL,
	[Days Taken For Solution] [smallint] NULL,
	[Has Root Cause Been Identified] [nvarchar](10) NULL,
	[PR_Remedial Change Number] [float] NULL,
	[Date_1] [datetime] NULL,
	[Key_GELID_Date_1] [varchar](max) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tblProvision]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblProvision](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[GEL ID] [float] NULL,
	[SystemStatusDesc] [nvarchar](255) NULL,
	[CatalogueRecordType] [nvarchar](255) NULL,
	[AppCIAHighestRating] [nvarchar](255) NULL,
	[Provision] [float] NULL,
	[Last Updated] [datetime] NULL,
	[Planned Date] [datetime] NULL,
	[Required Date] [datetime] NULL,
	[Ques Type] [nvarchar](255) NULL,
	[ClokworkResponse] [nvarchar](255) NULL,
	[Parent Application Name] [nvarchar](max) NULL,
	[GovernanceCompliance] [nvarchar](255) NULL,
	[Provision Compliance] [nvarchar](255) NULL,
	[Survey RelationshipStatus] [nvarchar](255) NULL,
	[Date_1] [datetime] NULL,
	[Key_GELID_Date_1] [varchar](max) NULL,
	[Key_ProvID_Date_1] [varchar](max) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tblProvisionMapping]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblProvisionMapping](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[ProvisionID] [float] NOT NULL,
	[Provision Name] [nvarchar](255) NULL,
	[Date_1] [datetime] NULL,
	[Key_ProvID_Date_1] [varchar](max) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tblRasmetricPerformance_Stage]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblRasmetricPerformance_Stage](
	[ContentId] [int] IDENTITY(1,1) NOT NULL,
	[RasMetricId] [int] NOT NULL,
	[InputPerformanceValue] [float] NULL,
	[NoOfRecords] [int] NULL,
	[RegionWiseKRIPerformance] [varchar](max) NULL,
	[RagFlag] [int] NULL,
	[KRIRemark] [nvarchar](512) NULL,
	[PerformanceInfo] [varchar](128) NULL,
	[WeekKey] [varchar](50) NOT NULL,
	[CreatedBy] [varchar](50) NULL,
	[CreatedDate] [datetime] NULL CONSTRAINT [DF_tblRasmetricPerformance_Stage_CreatedDate]  DEFAULT (getutcdate()),
	[ModifiedBy] [varchar](50) NULL,
	[ModifiedDate] [datetime] NULL,
 CONSTRAINT [PK_tblRasmetricPerformance_Stage] PRIMARY KEY CLUSTERED 
(
	[RasMetricId] ASC,
	[WeekKey] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tblrolecoreskillpeoplsoft]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblrolecoreskillpeoplsoft](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[Employee ID] [float] NULL,
	[Forename] [nvarchar](max) NULL,
	[Surname] [nvarchar](max) NULL,
	[Status] [nvarchar](50) NULL,
	[E-Mail Address] [nvarchar](max) NULL,
	[Role Description] [nvarchar](max) NULL,
	[Effective Date] [varchar](50) NULL,
	[Role Experience Rating] [nvarchar](50) NULL,
	[Role Core Skill Description] [nvarchar](max) NULL,
	[Role Core Skill Proficiency] [nchar](10) NULL,
	[Employee Class] [nvarchar](max) NULL,
	[Division] [nvarchar](max) NULL,
	[SubDivision 1] [nvarchar](max) NULL,
	[SubDivision 2] [nvarchar](max) NULL,
	[SubDivision 3] [nvarchar](max) NULL,
	[SubDivision 4] [nvarchar](max) NULL,
	[Cost Centre] [nvarchar](50) NULL,
	[Description] [nvarchar](max) NULL,
	[Location] [nvarchar](max) NULL,
	[Location Description] [nvarchar](max) NULL,
	[Address1] [nvarchar](max) NULL,
	[Address2] [nvarchar](max) NULL,
	[Address3] [nvarchar](max) NULL,
	[City] [nvarchar](50) NULL,
	[Country] [nvarchar](50) NULL,
	[Age Band] [nvarchar](50) NULL,
	[Job Code] [nvarchar](50) NULL,
	[Job Entry Date] [varchar](50) NULL,
	[Continuous Service (Yrs)] [int] NULL,
	[Manager Level] [nvarchar](max) NULL,
	[Line Manager ID] [float] NULL,
	[Line Manager Name] [nvarchar](max) NULL,
	[Date_1] [datetime] NULL,
	[Key_CostCenter_Date_1] [varchar](max) NULL,
	[Key_PSID_Date_1] [varchar](max) NULL,
	[People Exclusions] [varchar](50) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tblTier]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblTier](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[GelId] [nvarchar](50) NULL,
	[Tier] [nvarchar](50) NULL
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[tblTOHR]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tblTOHR](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[Issue_ID] [nvarchar](15) NULL,
	[Organisation_Level_6] [nvarchar](50) NULL,
	[Issue_Type] [nvarchar](50) NULL,
	[Issue_Source] [nvarchar](50) NULL,
	[Issue_Status] [nvarchar](15) NULL,
	[Impact_Rating] [nvarchar](15) NULL,
	[Issue_Name] [nvarchar](300) NULL,
	[Summary_Description] [nvarchar](max) NULL,
	[Detailed_Description] [nvarchar](max) NULL,
	[Executive_Responsible] [nvarchar](300) NULL,
	[Issue_Owner_Name] [nvarchar](200) NULL,
	[Created_Date] [datetime] NULL,
	[Original_Target_Completion_Date] [datetime] NULL,
	[Close_Target_Completion_Date] [nvarchar](15) NULL,
	[Target_Completion_Date] [datetime] NULL,
	[Revised_Target_Completion_Date] [datetime] NULL,
	[Completion_Date] [datetime] NULL,
	[Organisation_Level_4] [nvarchar](50) NULL,
	[Organisation_Level_5] [nvarchar](50) NULL,
	[Policy_Issue] [nvarchar](100) NULL,
	[Policy_Standard] [nvarchar](100) NULL,
	[Policy_Owning_Area] [nvarchar](200) NULL,
	[RBS_Division] [nvarchar](100) NULL,
	[Organisation_Level_3] [nvarchar](100) NULL,
	[Location_Level_1] [nvarchar](100) NULL,
	[Location_Level_2] [nvarchar](100) NULL,
	[Location_Level_3] [nvarchar](100) NULL,
	[Location_Level_4] [nvarchar](100) NULL,
	[Location_Level_5] [nvarchar](100) NULL,
	[Location_Level_6] [nvarchar](100) NULL,
	[Organisation_Level_7] [nvarchar](100) NULL,
	[Organisation_Level_8] [nvarchar](100) NULL,
	[Accepted_Status] [nvarchar](15) NULL,
	[Last_Updated_Date] [datetime] NULL,
	[flgClosedPendReview] [nvarchar](15) NULL,
	[LAST_UPDATE_USER_RK] [nvarchar](100) NULL,
	[count_ext_due_date_change] [int] NULL,
	[Past_Coming_Due_Days] [int] NULL,
	[SoxRelevance] [nvarchar](15) NULL,
	[LastComments] [nvarchar](max) NULL,
	[Approval_Date] [datetime] NULL,
	[Publication_Date] [datetime] NULL,
	[Source_Reference] [nvarchar](100) NULL,
	[Organisation_Level_10] [nvarchar](100) NULL,
	[Source_Date] [datetime] NULL,
	[Accepted_Date] [datetime] NULL,
	[Cross_Divisional_Level1] [nvarchar](100) NULL,
	[Cross_Divisional_Level2] [nvarchar](100) NULL,
	[Cross_Divisional_Level3] [nvarchar](100) NULL,
	[Cross_Divisional_Level4] [nvarchar](100) NULL,
	[Previous_Impact_Rating] [nvarchar](20) NULL,
	[Source_Name] [nvarchar](max) NULL,
	[Organisation_Level_9] [nvarchar](20) NULL,
	[FirmWideRiskTaxonomy_Level1] [nvarchar](100) NULL,
	[FirmWideRiskTaxonomy_Level2] [nvarchar](100) NULL,
	[Approval_Date1] [datetime] NULL,
	[Accepted_Until] [datetime] NULL,
	[Issue_Workflow_Owner] [nvarchar](100) NULL,
	[Past_Due_Category] [nvarchar](100) NULL,
	[Policy] [nvarchar](100) NULL,
	[FirmWideRiskTaxonomy_Level3] [nvarchar](100) NULL,
	[Actual_Due_Date] [datetime] NULL,
	[Policy_Breach] [nvarchar](100) NULL,
	[Date_1] [datetime] NULL,
	[Key_GELID_Date_1] [varchar](max) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tblVacancies]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblVacancies](
	[Job_Opening_ID] [nvarchar](255) NULL,
	[Posting_Title] [nvarchar](255) NULL,
	[Vacancy_Status] [nvarchar](255) NULL,
	[Target_Openings] [nvarchar](255) NULL,
	[Hired] [nvarchar](255) NULL,
	[Openings_Remaining] [nvarchar](255) NULL,
	[Offer_and_Beyond] [nvarchar](255) NULL,
	[Active_Openings] [nvarchar](255) NULL,
	[Candidates_Attracted] [nvarchar](255) NULL,
	[Primary_Recruiter] [nvarchar](255) NULL,
	[Hiring_Manager] [nvarchar](255) NULL,
	[Segment_Job_Cluster] [nvarchar](255) NULL,
	[Job_Level] [nvarchar](255) NULL,
	[Externally_Internally_Advertised] [nvarchar](255) NULL,
	[Region] [nvarchar](255) NULL,
	[Country] [nvarchar](255) NULL,
	[City] [nvarchar](255) NULL,
	[Division] [nvarchar](255) NULL,
	[Sub_Division_1] [nvarchar](255) NULL,
	[Sub_Division_2] [nvarchar](255) NULL,
	[Sub_Division_3] [nvarchar](255) NULL,
	[Sub_Division_4] [nvarchar](255) NULL,
	[Cost_Centre] [nvarchar](max) NULL,
	[Opened_Date] [datetime] NULL,
	[Cancelled_Closed_Date] [datetime] NULL,
	[Date_1] [datetime] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
/****** Object:  Table [dbo].[tblVendor]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblVendor](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[ID] [int] NULL,
	[Vendor Name] [nvarchar](255) NULL,
	[Contract Manager] [nvarchar](255) NULL,
	[Contract Manager Assigned] [nvarchar](10) NULL,
	[Contract ID] [nvarchar](30) NULL,
	[SLT] [nvarchar](10) NULL,
	[Tier] [nvarchar](50) NULL,
	[SIA] [nvarchar](max) NULL,
	[Contract Type] [nvarchar](50) NULL,
	[Start Date] [datetime] NULL,
	[Expiry Date] [datetime] NULL,
	[Renewal Calendar] [nvarchar](60) NULL,
	[Contract Not in Place] [nvarchar](20) NULL,
	[SIA Not in Place] [nvarchar](20) NULL,
	[Contract Owner Not Assigned] [nvarchar](20) NULL,
	[Contracts overdue for renewal] [nvarchar](20) NULL,
	[Contract Manager Region] [nvarchar](10) NULL,
	[Contract Denom] [tinyint] NULL,
	[Contract Manager SLT] [nvarchar](30) NULL,
	[Date_1] [datetime] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
/****** Object:  Table [dbo].[tblVendorNew]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tblVendorNew](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[ID] [int] NULL,
	[Vendor Name] [nvarchar](255) NULL,
	[Contract Manager] [nvarchar](255) NULL,
	[Contract Manager Assigned] [nvarchar](10) NULL,
	[Contract ID] [nvarchar](30) NULL,
	[SLT] [nvarchar](50) NULL,
	[Tier] [nvarchar](50) NULL,
	[SIA] [nvarchar](max) NULL,
	[Contract Type] [nvarchar](50) NULL,
	[Start Date] [datetime] NULL,
	[Expiry Date] [datetime] NULL,
	[Renewal Calendar] [nvarchar](60) NULL,
	[Contract Not in Place] [nvarchar](20) NULL,
	[SIA Not in Place] [nvarchar](20) NULL,
	[Contract Owner Not Assigned] [nvarchar](20) NULL,
	[Contracts overdue for renewal] [nvarchar](20) NULL,
	[Contract Manager Region] [nvarchar](10) NULL,
	[Contract Denom] [tinyint] NULL,
	[Contract Manager SLT] [nvarchar](30) NULL,
	[Contract Status] [nvarchar](128) NULL,
	[Date_1] [datetime] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
/****** Object:  Table [dbo].[TOHRTable]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TOHRTable](
	[RowId] [int] IDENTITY(1,1) NOT NULL,
	[Issue ID] [int] NULL,
	[Organisation Level 6 (Issue)(function)] [nvarchar](255) NULL,
	[Issue Type] [nvarchar](255) NULL,
	[Issue Source] [nvarchar](255) NULL,
	[Issue Status] [nvarchar](255) NULL,
	[Impact Rating] [nvarchar](255) NULL,
	[Issue Name] [nvarchar](255) NULL,
	[Summary Description (Issue)] [nvarchar](max) NULL,
	[Detailed Description (Issue)] [nvarchar](max) NULL,
	[Executive Responsible] [nvarchar](255) NULL,
	[Issue Owner Name (Issue)] [nvarchar](255) NULL,
	[Created Date (Issue)] [datetime] NULL,
	[Original Target Completion Date (Issue)] [datetime] NULL,
	[Close Target Completion Date] [nvarchar](255) NULL,
	[Target Completion Date (Issue)] [datetime] NULL,
	[Revised Target Completion Date (Issue)] [datetime] NULL,
	[Completion Date (Issue) (Issue)] [nvarchar](255) NULL,
	[Organisation Level 4 (Issue)] [nvarchar](255) NULL,
	[Organisation Level 5 (Issue)] [nvarchar](255) NULL,
	[Policy (Issue)] [nvarchar](255) NULL,
	[Policy Standard (Issue)] [nvarchar](255) NULL,
	[Policy Owning Area] [nvarchar](255) NULL,
	[RBS Division ] [nvarchar](255) NULL,
	[Organisation Level 3 (Issue)] [nvarchar](255) NULL,
	[Location Level 1 (Issue)] [nvarchar](255) NULL,
	[Location Level 2 (Issue)] [nvarchar](255) NULL,
	[Location Level 3 (Issue)] [nvarchar](255) NULL,
	[Location Level 4 (Issue)] [nvarchar](255) NULL,
	[Location Level 5 (Issue)] [nvarchar](255) NULL,
	[Location Level 6 (Issue)] [nvarchar](255) NULL,
	[Organisation Level 7 (Issue)] [nvarchar](255) NULL,
	[Organisation Level 8 (Issue)] [nvarchar](255) NULL,
	[Accepted Status] [nvarchar](255) NULL,
	[Last Updated Date (Issue)] [datetime] NULL,
	[flgClosedPendReview] [nvarchar](255) NULL,
	[LAST_UPDATE_USER_RK] [nvarchar](255) NULL,
	[count_ext_due_date_change] [float] NULL,
	[Past/Coming Due Days] [float] NULL,
	[SoxRelevance] [nvarchar](255) NULL,
	[LastComments] [nvarchar](max) NULL,
	[Approval Date (Issue)] [datetime] NULL,
	[Publication Date (Issue)] [datetime] NULL,
	[Source Reference] [nvarchar](255) NULL,
	[Organisation Level 10 (Issue)] [nvarchar](255) NULL,
	[Source Date (Issue)] [nvarchar](255) NULL,
	[Accepted Date (Issue)] [datetime] NULL,
	[Cross Divisional Level1] [nvarchar](255) NULL,
	[Cross Divisional Level2] [nvarchar](255) NULL,
	[Cross Divisional Level3] [nvarchar](255) NULL,
	[Cross Divisional Level4] [nvarchar](255) NULL,
	[Previous Impact Rating] [nvarchar](255) NULL,
	[Source Name] [nvarchar](255) NULL,
	[Organisation Level 9 (Issue)] [nvarchar](255) NULL,
	[Approval Date (Issue)1] [datetime] NULL,
	[Accepted Until (Issue)] [datetime] NULL,
	[Issue Workflow Owner] [nvarchar](255) NULL,
	[Past Due Category] [nvarchar](255) NULL,
	[Policy ] [nvarchar](255) NULL,
	[FirmWideRiskTaxonomy Level1] [nvarchar](255) NULL,
	[FirmWideRiskTaxonomy Level2] [nvarchar](255) NULL,
	[FirmWideRiskTaxonomy Level3] [nvarchar](255) NULL,
	[Actual Due Date (Issue)] [datetime] NULL,
	[Policy Breach] [nvarchar](255) NULL,
	[Material Risk] [nvarchar](255) NULL,
	[SLT] [nvarchar](255) NULL,
	[Region] [nvarchar](255) NULL,
	[Date_1] [datetime] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
/****** Object:  View [dbo].[vITS_AVL_OVL]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vITS_AVL_OVL]  AS
select cast(TApps.[GEL ID] as int) as [CatalogueId],TApps.[System Location],
TApps.[CIA Rating],
tmpI.[Incident Number],tmpI.[Priority],tmpI.[Impact],
CASE When tmpI.[Impact Start Date] is not null then
Convert(varchar(10),tmpI.[Impact Start Date],126)
ELSE null ENd as [Impact Start Date],
CASE When tmpI.[Opened  At] is not null then
Convert(varchar(10),tmpI.[Opened  At],126)
ELSE null ENd as [Opened  At],
Isnull(tmpI.[Impact Duration],0) as [Impact Duration],
Isnull(case When isnull(tmpI.impact,'')='1 - Critical'
then CAST(tmpI.[Impact Duration] as float)
When isnull(tmpI.impact,'')='2 - Major'
then (CAST(tmpI.[Impact Duration] as float) * 0.5)
When isnull(tmpI.impact,'')='3 - Medium'
then (CAST(tmpI.[Impact Duration] as float) * 0.166)
Else 0 end,0) as [Weighted Impact],
Isnull(Tr.tier,'') as Tier,
TAppM.Mapping as SLT,
TApps.AppManagerRegion as Region

from tblAllapps TApps 
left outer join tblIncident tmpI
on  TApps.[GEL ID]=tmpI.[Catalogue Id]
left outer join tblTier Tr
on TApps.[GEL ID]=Tr.GelId
left outer join tblAppmapping TAppM on 
TApps.Unit=TAppM.Unit
where TApps.[Tech Division]='NatWest Markets'
and TApps.[GEL Status] in ('Live','Live (To be decommissioned)')
and TApps.[GEL ID] is not null and TApps.[GEL ID]>0
and TApps.Unit not in ('Developer',
'International Banking',
'Business Developed and Supported',
'Transaction Services and EMEA Technology')
and lower(isnull(TApps.[Record Type],'')) in 
('application','infrastructure')

GO
/****** Object:  View [dbo].[vTotalAvailabilityDurationPerApp]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create view [dbo].[vTotalAvailabilityDurationPerApp] as

With TargettedDuration as (
select distinct top 1 replace(convert(varchar(7),T1.[Impact Start Date],126),'-','') as MKey,T2.[Month],T2.[Year]
from tblIncident T1 join mcrt..tblmonthdim T2 on 
Ltrim(RTrim(replace(convert(varchar(7),T1.[Impact Start Date],126),'-','')))=T2.mKey
 where T1.[Impact Start Date] is not null 
 union  
 select distinct top 1 replace(convert(varchar(7),T1.[Opened  At],126),'-','') as MKey,T2.[Month],T2.[Year]
from tblIncident T1 join mcrt..tblmonthdim T2 on 
Ltrim(RTrim(replace(convert(varchar(7),T1.[Opened  At],126),'-','')))=T2.mKey
 where T1.[Opened  At] is not null)
 
 select(count(1) * 24 * 60) as TotalDurationForAvailabilityPerApp from 
 mcrt..DimDate tDD join
 (select top 1 MKey,[Month],[Year] from TargettedDuration order by 1)temp 
 on tDD.[Month]=temp.[Month] and tDD.[Year]=temp.[Year]
 Where tDD.IsWeekday=1
GO
/****** Object:  View [dbo].[vITS_AVL_App]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE view  [dbo].[vITS_AVL_App] as
select [CatalogueId],[System Location],[CIA Rating],[Tier],[SLT],[Region],
case when [CIA Rating] like '%A:1' then 1 else 0 end as IsCIA_A_1,
Sum([Weighted Impact]) as [Weighted Impact],
((1-(Sum([Weighted Impact])/(select top 1 TotalDurationForAvailabilityPerApp from vTotalAvailabilityDurationPerApp))) * 100 * 1.00) as [AppAvailability_%]
from [vITS_AVL_OVL]
group by [CatalogueId],[System Location],[CIA Rating],[Tier],[SLT],[Region],
case when [CIA Rating] like '%A:1' then 1 else 0 end
GO
/****** Object:  View [dbo].[vITS_AVL_App_Tier]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create VIEW [dbo].[vITS_AVL_App_Tier]  AS

with TempDataSET as (
select cast(TApps.[GEL ID] as int) as [CatalogueId],TApps.[System Location],
TApps.[CIA Rating],
tmpI.[Incident Number],tmpI.[Priority],tmpI.[Impact],
CASE When tmpI.[Impact Start Date] is not null then
Convert(varchar(10),tmpI.[Impact Start Date],126)
ELSE null ENd as [Impact Start Date],
CASE When tmpI.[Opened  At] is not null then
Convert(varchar(10),tmpI.[Opened  At],126)
ELSE null ENd as [Opened  At],
Isnull(tmpI.[Impact Duration],0) as [Impact Duration],
Isnull(case When isnull(tmpI.impact,'')='1 - Critical'
then CAST(tmpI.[Impact Duration] as float)
When isnull(tmpI.impact,'')='2 - Major'
then (CAST(tmpI.[Impact Duration] as float) * 0.5)
When isnull(tmpI.impact,'')='3 - Medium'
then (CAST(tmpI.[Impact Duration] as float) * 0.166)
Else 0 end,0) as [Weighted Impact],
Isnull(Tr.tier,'') as Tier,
TAppM.Mapping as SLT,
TApps.AppManagerRegion as Region
from tblAllapps TApps 
left outer join tblIncident tmpI
on  TApps.[GEL ID]=tmpI.[Catalogue Id]
left outer join tblTier Tr
on TApps.[GEL ID]=Tr.GelId
left outer join tblAppmapping TAppM on 
TApps.Unit=TAppM.Unit
where TApps.[Tech Division]='NatWest Markets'
and TApps.[GEL Status] in ('Live','Live (To be decommissioned)')
and TApps.[GEL ID] is not null and TApps.[GEL ID]>0
and TApps.Unit not in ('Developer',
'International Banking',
'Business Developed and Supported',
'Transaction Services and EMEA Technology')
and Isnull(Tr.tier,'') in ('1','2'))

select [CatalogueId],[System Location],[CIA Rating],[Tier],[SLT],[Region],
case when [CIA Rating] like '%A:1' then 1 else 0 end as IsCIA_A_1,
Sum([Weighted Impact]) as [Weighted Impact],
((1-(Sum([Weighted Impact])/(select top 1 TotalDurationForAvailabilityPerApp from vTotalAvailabilityDurationPerApp))) * 100 * 1.00) as [AppAvailability_%]
from TempDataSET
group by [CatalogueId],[System Location],[CIA Rating],[Tier],[SLT],[Region],
case when [CIA Rating] like '%A:1' then 1 else 0 end


GO
/****** Object:  View [dbo].[vITS_Incidents_Root]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vITS_Incidents_Root]  AS
select cast(TApps.[GEL ID] as int) as [CatalogueId],TApps.[System Location],
TApps.[CIA Rating],
tmpI.[Incident Number],tmpI.[Priority],tmpI.[Impact],
CASE When tmpI.[Impact Start Date] is not null then
Convert(varchar(10),tmpI.[Impact Start Date],126)
ELSE null ENd as [Impact Start Date],
CASE When tmpI.[Opened  At] is not null then
Convert(varchar(10),tmpI.[Opened  At],126)
ELSE null ENd as [Opened  At],
Isnull(tmpI.[Impact Duration],0) as [Impact Duration],
Isnull(Tr.tier,'') as Tier,
TAppM.Mapping as SLT,
TApps.AppManagerRegion as Region,
tMd.Format2 as MonthTag
from  tblIncidents12Months tmpI  
join tblAllapps TApps
on  tmpI.[Catalogue Id]= TApps.[GEL ID]
left outer join tblTier Tr
on TApps.[GEL ID]=Tr.GelId
left outer join tblAppmapping TAppM on 
TApps.Unit=TAppM.Unit
left outer join mcrt..tblMonthDim tMd 
 on Replace(convert(varchar(7),tmpI.[Opened  At],126),'-','')=tMd.mKey
where TApps.[Tech Division]='NatWest Markets'
and TApps.[GEL ID] is not null and TApps.[GEL ID]>0
and TApps.Unit not in ('Developer',
'International Banking',
'Business Developed and Supported',
'Transaction Services and EMEA Technology')
and lower(isnull(TApps.[Record Type],'')) in 
('application','infrastructure')
and tmpI.[Priority] in ('P1','P2')


GO
/****** Object:  View [dbo].[vITS_Incidents_Performance]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vITS_Incidents_Performance]  AS
select MonthTag,count(*) as NoOfIncidents
 from [vITS_Incidents_Root] 
 group by MonthTag

GO
/****** Object:  View [dbo].[vCHNG_AdhrChngPOL]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vCHNG_AdhrChngPOL]  AS
select cast(TApps.[GEL ID] as int) as [CatalogueId],
TApps.[System Location],
tProv.[Provision Compliance],
tProv.[Provision],
tProvM.[Provision Name],
Isnull(Tr.tier,'') as Tier,
TAppM.Mapping as SLT,
TApps.AppManagerRegion as Region
from tblProvision tProv join 
tblAllapps TApps on
tProv.[GEL ID]=TApps.[GEL ID]
left outer join tblProvisionMapping tProvM
on tProv.[Provision]=tProvM.[ProvisionID]
left outer join tblTier Tr
on TApps.[GEL ID]=Tr.GelId
left outer join tblAppmapping TAppM on 
TApps.Unit=TAppM.Unit
where TApps.[Tech Division]='NatWest Markets'
and TApps.[GEL Status] in ('Live','Live (To be decommissioned)')
and TApps.[GEL ID] is not null and TApps.[GEL ID]>0
and TApps.Unit not in ('Developer',
'International Banking',
'Business Developed and Supported',
'Transaction Services and EMEA Technology')
and LTRIM(RTRIM(tProv.[AppCIAHighestRating]))='1'
and lower(isnull(TApps.[Record Type],'')) in 
('application','infrastructure')
and lower(LTRIM(RTRIM(tProvM.[Provision Name]))) 
in ('adherence to change approval compliance','adherence to change sod compliance',
'adherence to change technology control systems','adherence to infra change management standards',
'adherence to release management standards')
GO
/****** Object:  View [dbo].[vCHNG_ChngMgmt_Success]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vCHNG_ChngMgmt_Success]  AS
select cast(TApps.[GEL ID] as int) as [CatalogueId],
TApps.[System Location],
TChng.[Change Number],
TChng.[Change Close Code],
Isnull(Tr.tier,'') as Tier,
TAppM.Mapping as SLT,
TApps.AppManagerRegion as Region
from tblChange tChng join 
tblAllapps TApps on
tChng.[Catalogue Id]=TApps.[GEL ID]
left outer join tblTier Tr
on TApps.[GEL ID]=Tr.GelId
left outer join tblAppmapping TAppM on 
TApps.Unit=TAppM.Unit
where TApps.[Tech Division]='NatWest Markets'
and TApps.[GEL Status] in ('Live','Live (To be decommissioned)')
and TApps.[GEL ID] is not null and TApps.[GEL ID]>0
and TApps.Unit not in ('Developer',
'International Banking',
'Business Developed and Supported',
'Transaction Services and EMEA Technology')
and lower(LTRIM(RTRIM(TChng.[Change Close Code])))
in ('successful','aborted','not fully successful','back out')
and lower(LTRIM(RTRIM(TChng.[Change Number]))) like 'mcr%'


GO
/****** Object:  View [dbo].[vCHNG_PM_Milestones]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vCHNG_PM_Milestones] as 
SELECT  [Programme/Project]
      ,CAST ([Milestone ID] as int) as [Milestone ID] 
      ,[Milestone ]
      ,[RAG]
      ,CAST ([Milestone Level] as int) as [Milestone Level]
      ,[Key Milestone]
      ,[Baseline]
      ,[Schedule]
      ,[Actual]
      ,[Variance]
      ,[Milestone_Commentary]
      ,[Comments]
      ,[Milestone Category]
      ,[Business Area Impacted]
      ,[Date_1]
  FROM [MCRT_DS].[dbo].[tblPMMilestones]
  WHERE CAST([Milestone Level] as int) =0
  and [RAG] <> 'Black'
GO
/****** Object:  View [dbo].[vCHNG_PM_PMIssues]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 CREATE VIEW [dbo].[vCHNG_PM_PMIssues] as 
 SELECT
  [Programme]
      ,[Sub Programme]      
      ,[CRI ID]
      ,[CRI Status]  
      ,Convert(varchar(10),[Checkpoint Date],126) as [Checkpoint Date]
      ,Convert(varchar(10),[Target Closure Date],126) as [Target Closure Date], CASE   when 
	  Convert(varchar(10),[Target Closure Date],126) < Convert(varchar(10),GETUTCDATE(),126)
	  then 'Non-Compliant' else 'Compliant' end as CompliantStatus
  FROM [MCRT_DS]..[tblPMIssues]
GO
/****** Object:  View [dbo].[vCHNG_PM_PMRisks]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 CREATE VIEW [dbo].[vCHNG_PM_PMRisks] as 
 SELECT
  [Programme]
      ,[Sub Programme]      
      ,[CRI ID]
      ,[CRI Status]  
      ,Convert(varchar(10),[Checkpoint Date],126) as [Checkpoint Date]
      ,Convert(varchar(10),[Target Closure Date],126) as [Target Closure Date], CASE   when 
	  Convert(varchar(10),[Target Closure Date],126) < Convert(varchar(10),GETUTCDATE(),126)
	  then 'Non-Compliant' else 'Compliant' end as CompliantStatus
  FROM [MCRT_DS]..[tblPMRisk]
GO
/****** Object:  View [dbo].[vINFO_DS_DLP]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vINFO_DS_DLP] as 
SELECT CAST(DLP.[Id] as int) as [Id],
convert(varchar(10),DLP.[Sent],126) as [Sent],
TCCM.[Region],DLP.[Status],TCCM.[Business Hierarchy Level 4] as SLT,DLP.[Cost Centre Code]
  FROM [MCRT_DS]..[tblDLP] DLP
  left outer join tblCostCentreSLTRegionMapping TCCM
on LTRIM(RTRIM(DLP.[Cost Centre Code]))=LTRIM(RTRIM(TCCM.[Khalix Symbol]))
 Where LTRIM(RTRIM(ISNULL(TCCM.[Business Hierarchy Level 4],''))) 
 not in ('CR','DES','Risk Solutions',' ','')

GO
/****** Object:  View [dbo].[vINFO_TVM_Phishing]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE view [dbo].[vINFO_TVM_Phishing]
As

With INFO_TVM_Phishing as (
SELECT CAST(TPS.[Employee ID] as int) as [EmployeeId],
(Isnull(TPS.[Formal Forename],'') + Isnull(' ' + TPS.[Middle Names],'') 
+ Isnull(' ' + TPS.[Surname],'')) as [Employee Name],
T1.[emailAddress],
TPS.[Active/ InActive] as [Status],
TPS.[Global Cost Centre] as  [Cost Centre],
(Isnull(TPS.[Line Manager First Name],'') + Isnull(' ' + TPS.[Line Manager Surname],'')) as [LM Name],
TCCM.[Business Hierarchy Level 4] as SLT,
TCCM.[Region],
	  CASE WHEN ((Select count(1) from tblEmailsClickedUnderPhishingTest
	  Where ltrim(Rtrim([Recipient]))=ltrim(rtrim(T1.[emailAddress]))
	  and ltrim(rtrim([Type]))='email link click') > 0) then 'Failed' else 'Passed' end as PhishingTestStatus     

  FROM [tblEmailsSentForPhishingTest] T1
  left outer join tblheadcountPeoplesoft TPS on 
  ltrim(rtrim(T1.[emailAddress]))=ltrim(rtrim(TPS.[Work Email Address]))
  left outer join tblCostCentreSLTRegionMapping TCCM on 
  ltrim(rtrim(TPS.[Global Cost Centre]))=ltrim(rtrim(TCCM.[Khalix Symbol]))
  Where LTRIM(RTRIM(ISNULL(TCCM.[Business Hierarchy Level 4],''))) not in ('CR','DES','Risk Solutions',' ',''))
  SELECT * from INFO_TVM_Phishing;
GO
/****** Object:  View [dbo].[vITR_DR]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vITR_DR]  AS
select cast(TApps.[GEL ID] as int) as [CatalogueId],TApps.[System Location],
TApps.[Out of Governance],
TApps.Department,
convert(varchar(10),TApps.[Governance Expiry Date],126) as [Governance Expiry Date],
Isnull(Tr.tier,'') as Tier,
TApps.[Last Result],
TAppM.Mapping as SLT,
TApps.AppManagerRegion as Region
from tblAllapps TApps 
left outer join tblTier Tr
on TApps.[GEL ID]=Tr.GelId
left outer join tblAppmapping TAppM on 
TApps.Unit=TAppM.Unit
where TApps.[Tech Division]='NatWest Markets'
and TApps.[GEL Status] in ('Live','Live (To be decommissioned)')
and TApps.[GEL ID] is not null and TApps.[GEL ID]>0
and TApps.Unit not in ('Developer',
'International Banking',
'Business Developed and Supported',
'Transaction Services and EMEA Technology')
and ISNULL(TApps.DRAppFlag,'')='1'
and Isnull(Tr.tier,'') in ('1','2')


GO
/****** Object:  View [dbo].[vITR_EOL_HW]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vITR_EOL_HW]  AS

select cast(TApps.[GEL ID] as int) as [CatalogueId],TApps.[System Location],
TEOL.Hostname,
TEOL.EOLHWRemediation,
CASE when TEOL.EOLHWRemediation='Risk Outside Appetite' 
then 'Yes' else 'No' end as [IsEndOfLifeBeyondAppetite],
Isnull(Tr.tier,'') as Tier,
TAppM.Mapping as SLT,
TApps.AppManagerRegion as Region
from tblEOL TEOL  
join tblAllapps TApps 
on TEOL.[GEL ID]=TApps.[GEL ID]
left outer join tblTier Tr
on TApps.[GEL ID]=Tr.GelId
left outer join tblAppmapping TAppM on 
TApps.Unit=TAppM.Unit
where TApps.[Tech Division]='NatWest Markets'
and TApps.[GEL Status] in ('Live','Ready For Live','Build')
and TApps.[GEL ID] is not null and TApps.[GEL ID]>0
and TApps.Unit not in ('Developer',
'International Banking',
'Business Developed and Supported',
'Transaction Services and EMEA Technology')
and Isnull(Tr.tier,'') in ('1','2')
and lower(ltrim(rtrim(TEOL.HostType)))='physical'
and lower(ltrim(rtrim(TEOL.AppBuySellHoldFlag)))='b'
and lower(ltrim(rtrim(TEOL.InfraEnvDescription))) 
not in ('development','end of day','unknown')  

GO
/****** Object:  View [dbo].[vITR_Governance_CIA]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vITR_Governance_CIA]  AS
select cast(TApps.[GEL ID] as int) as [CatalogueId],TApps.[System Location],
case when TApps.[CIA Upload Date] is not null   
then convert(varchar(10),TApps.[CIA Upload Date],126) else null end
as [CIA Upload Date],
Convert(varchar(10),DATEADD(month,-12,getutcdate()),126) as ThreshholdDate,
case when TApps.[CIA Upload Date] is not null   
then 
CASE when convert(varchar(10),TApps.[CIA Upload Date],126) >=Convert(varchar(10),DATEADD(month,-12,getutcdate()),126)
then 'Yes' else 'No' end
else 'No' end as Compliant,
TAppM.Mapping as SLT,
TApps.AppManagerRegion as Region
from tblAllapps TApps 
left outer join tblAppmapping TAppM on 
TApps.Unit=TAppM.Unit
where TApps.[Tech Division]='NatWest Markets'
and TApps.[GEL Status] in ('Live','Live (To be decommissioned)')
and TApps.[GEL ID] is not null and TApps.[GEL ID]>0
and TApps.Unit not in ('Developer',
'International Banking',
'Business Developed and Supported',
'Transaction Services and EMEA Technology')
and lower(isnull(TApps.[Record Type],'')) in 
('application','external service','external service – rbs hosted')
GO
/****** Object:  View [dbo].[vITR_Governance_GEL]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vITR_Governance_GEL]  AS
select  cast(TApps.[GEL ID] as int) as [CatalogueId],TApps.[System Location],
tg.[Gel Sign Off Status],
convert(varchar(10),tg.TabSignOffDate,126) as TabSignOffDate,
Isnull(Tr.tier,'') as Tier,
TAppM.Mapping as SLT,
TApps.AppManagerRegion as Region
from tblGel tg  
join tblAllapps TApps on tg.[GEL ID] =TApps.[GEL ID]
left outer join tblTier Tr
on TApps.[GEL ID]=Tr.GelId
left outer join tblAppmapping TAppM on 
TApps.Unit=TAppM.Unit
where TApps.[Tech Division]='NatWest Markets'
and TApps.[GEL Status] in ('Live','Live (To be decommissioned)')
and TApps.[GEL ID] is not null and TApps.[GEL ID]>0
and TApps.Unit not in ('Developer',
'International Banking',
'Business Developed and Supported',
'Transaction Services and EMEA Technology')
and Isnull(Tr.tier,'') in ('1','2')
and lower(isnull(tg.GelGovTabName,''))='infrastructure'

GO
/****** Object:  View [dbo].[vITS_Prblm_KI_RecordsNoSolution_60days]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vITS_Prblm_KI_RecordsNoSolution_60days]  AS

select cast(TApps.[GEL ID] as int) as [CatalogueId],TApps.[System Location],tPrblm.[Priority],
tPrblm.[Problem Number],
CASE when tPrblm.[Problem Closed At] is not null then convert(varchar(10),tPrblm.[Problem Closed At],126)
ELSE null END as [Problem Closed At],
Cast(tPrblm.[Days Taken For Solution] as int) as [Days Taken For Solution],
Isnull(Tr.tier,'') as Tier,
TAppM.Mapping as SLT,
TApps.AppManagerRegion as Region
from tblPrblmMgmt tPrblm
join tblAllapps TApps 
on  tPrblm.[Catalogue Id]= TApps.[GEL ID]
left outer join tblTier Tr
on TApps.[GEL ID]=Tr.GelId
left outer join tblAppmapping TAppM on 
TApps.Unit=TAppM.Unit
where TApps.[Tech Division]='NatWest Markets'
and TApps.[GEL Status] in ('Live','Live (To be decommissioned)')
and TApps.[GEL ID] is not null and TApps.[GEL ID]>0
and TApps.Unit not in ('Developer',
'International Banking',
'Business Developed and Supported',
'Transaction Services and EMEA Technology')
and Isnull(tPrblm.[Priority],'') in ('P1','P2')
and tPrblm.[Problem Closed At] is not null
GO
/****** Object:  View [dbo].[vITS_Prblm_KI_RecordsNotClosed_90days]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vITS_Prblm_KI_RecordsNotClosed_90days]  AS

select cast(TApps.[GEL ID] as int) as [CatalogueId],TApps.[System Location],tPrblm.[Priority],
tPrblm.[Problem Number],
Convert(varchar(10),tPrblm.[Problem Open At],126) as [Problem Open At],
tPrblm.[Has Root Cause Been Identified],
Isnull(Tr.tier,'') as Tier,
TAppM.Mapping as SLT,
TApps.AppManagerRegion as Region
from tblPrblmMgmt tPrblm 
join tblAllapps TApps
on tPrblm.[Catalogue Id]= TApps.[GEL ID]
left outer join tblTier Tr
on TApps.[GEL ID]=Tr.GelId
left outer join tblAppmapping TAppM on 
TApps.Unit=TAppM.Unit
where TApps.[Tech Division]='NatWest Markets'
and TApps.[GEL Status] in ('Live','Live (To be decommissioned)')
and TApps.[GEL ID] is not null and TApps.[GEL ID]>0
and TApps.Unit not in ('Developer',
'International Banking',
'Business Developed and Supported',
'Transaction Services and EMEA Technology')
and Isnull(tPrblm.[Priority],'') in ('P1','P2')
and Convert(varchar(10),tPrblm.[Problem Open At],126) <= Convert(varchar(10),DATEADD(day,-90,getutcdate()),126)
and tPrblm.[Problem Closed At] is null
GO
/****** Object:  View [dbo].[vITS_Prblm_KI_RecordsOpen_30days]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vITS_Prblm_KI_RecordsOpen_30days]  AS

select cast(TApps.[GEL ID] as int) as [CatalogueId],TApps.[System Location],tPrblm.[Priority],
tPrblm.[Problem Number],
Convert(varchar(10),tPrblm.[Problem Open At],126) as [Problem Open At],
tPrblm.[Has Root Cause Been Identified],
Isnull(Tr.tier,'') as Tier,
TAppM.Mapping as SLT,
TApps.AppManagerRegion as Region
from tblPrblmMgmt tPrblm
join tblAllapps TApps 
on  tPrblm.[Catalogue Id]= TApps.[GEL ID]
left outer join tblTier Tr
on TApps.[GEL ID]=Tr.GelId
left outer join tblAppmapping TAppM on 
TApps.Unit=TAppM.Unit
where TApps.[Tech Division]='NatWest Markets'
and TApps.[GEL Status] in ('Live','Live (To be decommissioned)')
and TApps.[GEL ID] is not null and TApps.[GEL ID]>0
and TApps.Unit not in ('Developer',
'International Banking',
'Business Developed and Supported',
'Transaction Services and EMEA Technology')
and Isnull(tPrblm.[Priority],'') in ('P1','P2')
and Convert(varchar(10),tPrblm.[Problem Open At],126) <= Convert(varchar(10),DATEADD(day,-30,getutcdate()),126)


GO
/****** Object:  View [dbo].[vOS_Contract_Gov_Adhr_ServiceLevelExpectations]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vOS_Contract_Gov_Adhr_ServiceLevelExpectations]  AS
select cast(TApps.[GEL ID] as int) as [CatalogueId],
TApps.[System Location],
tProv.[Provision Compliance],
tProv.[Provision],
tProvM.[Provision Name],
Isnull(Tr.tier,'') as Tier,
TAppM.Mapping as SLT,
TApps.AppManagerRegion as Region
from tblProvision tProv join 
tblAllapps TApps on
tProv.[GEL ID]=TApps.[GEL ID]
left outer join tblProvisionMapping tProvM
on tProv.[Provision]=tProvM.[ProvisionID]
left outer join tblTier Tr
on TApps.[GEL ID]=Tr.GelId
left outer join tblAppmapping TAppM on 
TApps.Unit=TAppM.Unit
where TApps.[Tech Division]='NatWest Markets'
and TApps.[GEL Status] in ('Live','Live (To be decommissioned)')
and TApps.[GEL ID] is not null and TApps.[GEL ID]>0
and TApps.Unit not in ('Developer',
'International Banking',
'Business Developed and Supported',
'Transaction Services and EMEA Technology')
and LTRIM(RTRIM(tProv.[AppCIAHighestRating]))='1'
and lower(isnull(TApps.[Record Type],'')) in 
('application','infrastructure')
and lower(LTRIM(RTRIM(tProvM.[Provision Name]))) 
in ('adherence to service level expectations')
GO
/****** Object:  View [dbo].[vOS_Contract_Gov_ContractOwnerNotAssigned]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vOS_Contract_Gov_ContractOwnerNotAssigned]
AS
Select tVndr.[Contract ID],tVndr.[ID],tVndr.[Tier],tVndr.[Vendor Name],tVndr.[Contract Manager],tVndr.[Contract Status],
CASE WHEN tVndr.[Contract Manager] is not null and tVndr.[Contract Manager] not in  ('',' ') 
then 'Compliant' else 'Non Compliant' end as [Compliance Status],tVndr.[SLT] as [SLT],
Convert(varchar(10),tVndr.[Start Date],126) as [Start Date],Convert(varchar(10),tVndr.[Expiry Date],126)  as [Expiry Date]
from tblVendorNew tVndr where tVndr.[Tier] in ('1','2','3','4') and LTRIM(RTRIM(tVndr.[Contract Status]))='Active'
and LTRIM(RTRIM(tVndr.[Contract Manager])) not in ('TBC')
GO
/****** Object:  View [dbo].[vOS_Contract_Gov_ContractsOverDueForRenewal]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vOS_Contract_Gov_ContractsOverDueForRenewal]
AS
Select tVndr.[Contract ID],tVndr.[ID],tVndr.[Tier],tVndr.[Vendor Name],tVndr.[Contract Manager],tVndr.[Contract Status],
CASE WHEN Convert(varchar(10),tVndr.[Expiry Date],126) >=Convert(varchar(10),getutcdate(),126)
then 'Compliant' else 'Non Compliant' end as [Compliance Status],tVndr.[SLT] as [SLT],
Convert(varchar(10),tVndr.[Start Date],126) as [Start Date],Convert(varchar(10),tVndr.[Expiry Date],126)  as [Expiry Date]
from tblVendorNew tVndr where tVndr.[Tier] in ('1','2','3','4') and LTRIM(RTRIM(tVndr.[Contract Status]))='Active'
GO
/****** Object:  View [dbo].[vOS_Contract_Gov_P2PVendorOS]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE view [dbo].[vOS_Contract_Gov_P2PVendorOS]
As
Select P2PV.[SupplierParentName]
      ,P2PV.[SupplierSupplierName]
      ,P2PV.[Normalised_Supplier]
      ,P2PV.[New_Category_Alignment_Team]
      ,P2PV.[New_Category_Level_1]
      ,P2PV.[New_Category_Level_2]
      ,P2PV.[Cost_Centre]
      ,P2PV.[CostCentreName]
      ,P2PV.[CompanyLevel0]
      ,P2PV.[Tag]
      ,P2PV.[CompanyLevel1]
      ,P2PV.[CompanyLevel2]
      ,P2PV.[CompanyLevel3]
      ,P2PV.[CompanyLevel4]
      ,P2PV.[Yearr]
      ,P2PV.[Monthh]
      ,P2PV.[SupClass]
      ,P2PV.[CompliantToClass]
      ,P2PV.[CompliantToP2P]
      ,P2PV.[SumOfTotal]
      ,P2PV.[Records]
      ,P2PV.[SupplierID]
      ,P2PV.[Original_CCY]
      ,P2PV.[Original_CCY_Amount]
      ,LTRIM(RTRIM(TCCM.[Region])) as [Region]
      ,P2PV.[Country]
      ,P2PV.[GL_Name]
      ,P2PV.[GL_Id]
      ,P2PV.[Inv_PO_ID]
      ,P2PV.[Source1]
      ,P2PV.[Local_Cost_Centre_Name]
      ,P2PV.[Local_Cost_Centre],
	  TCCM.[Business Hierarchy Level 4] as SLT
  FROM [MCRT_DS]..[tblP2PVendor_OS] P2PV
  left outer join tblCostCentreSLTRegionMapping TCCM
on (LTRIM(RTRIM(P2PV.[Cost_Centre]))=LTRIM(RTRIM(TCCM.[Khalix Symbol])) or LTRIM(RTRIM(P2PV.[Cost_Centre]))=LTRIM(RTRIM(TCCM.[OU])))
Where LTRIM(RTRIM(ISNULL(TCCM.[Business Hierarchy Level 4],''))) not in ('CR','DES','Risk Solutions',' ','')
and (P2PV.[CompliantToP2P] in ('COMPLIANT','NON COMPLIANT') or P2PV.[CompliantToClass] in ('COMPLIANT','NON COMPLIANT'))
GO
/****** Object:  View [dbo].[vOS_Contract_Gov_SIA]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vOS_Contract_Gov_SIA]
AS
Select tVndr.[Contract ID],tVndr.[ID],tVndr.[Tier],tVndr.[Vendor Name],tVndr.[Contract Manager],tVndr.[Contract Status],
CASE WHEN LTRIM(RTRIM([SIA])) in ('Yes','',' ','NA')
then 'Compliant' else 'Non Compliant' end as [Compliance Status],tVndr.[SLT] as [SLT],
Convert(varchar(10),tVndr.[Start Date],126) as [Start Date],Convert(varchar(10),tVndr.[Expiry Date],126)  as [Expiry Date],
LTRIM(RTRIM([SIA])) as [SIA]
from tblVendorNew tVndr where tVndr.[Tier] in ('1','2','3','4') and LTRIM(RTRIM(tVndr.[Contract Status]))='Active'
and LTRIM(RTRIM([SIA])) in ('Yes','No','',' ','NA')
GO
/****** Object:  View [dbo].[vPeople_Attrition_AbsenceRate]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vPeople_Attrition_AbsenceRate]  AS
select cast(tPS.[Employee ID] as int) as [Employee ID],
(Isnull(tPS.[Formal Forename],'') + Isnull(' ' + tPS.[Middle Names],'') 
+ Isnull(' ' + tPS.[Surname],'')) as [Employee Name],
tPS.[Active/ InActive] as [Status],
tPS.[Global Cost Centre] as [Cost Centre],
(Isnull(tPS.[Line Manager First Name],'') + Isnull(' ' + tPS.[Line Manager Surname],'')) as [LM Name],
TCCM.[Business Hierarchy Level 4] as SLT,
TCCM.Region,
CASE WHEN ISNULL(tPS.[Active/ InActive],'') ='Active' then 'Present(Active)' else  'Absence' end as [StatusSummary]
from tblheadcountPeoplesoft tPS 
left outer join tblCostCentreSLTRegionMapping TCCM
on LTRIM(RTRIM(tPS.[Global Cost Centre]))=LTRIM(RTRIM(TCCM.[Khalix Symbol]))
where tPS.[Employee ID] is not null and tPS.[Employee ID]>0
and LTRIM(RTRIM(ISNULL(TCCM.[Business Hierarchy Level 4],''))) not in ('CR','DES','Risk Solutions',' ','')


GO
/****** Object:  View [dbo].[vPeople_CRF]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vPeople_CRF]  AS
select cast(tPS.[Employee ID] as int) as [Employee ID],
(Isnull(tPS.[Formal Forename],'') + Isnull(' ' + tPS.[Middle Names],'') 
+ Isnull(' ' + tPS.[Surname],'')) as [Employee Name],
tPS.[Active/ InActive] as [Status],
tPS.[Global Cost Centre] as [Cost Centre],
(Isnull(tPS.[Line Manager First Name],'') + Isnull(' ' + tPS.[Line Manager Surname],'')) as [LM Name],
TCCM.[Business Hierarchy Level 4] as SLT,
TCCM.Region,
tRCPS.[Role Description],
CASE When Len(Isnull(tRCPS.[Role Description],''))=0 then 'Non-Compliant'
ELSE 'Compliant' END as [Role Status],
tRCPS.[Role Core Skill Description],
CASE When Len(Isnull(tRCPS.[Role Core Skill Description],''))=0 then 'Non-Compliant'
ELSE 'Compliant' END as [Core Skills Status],
tRCPS.[People Exclusions],convert(datetime,tPS.[Accredited Service Date],126) as [Accredited Service Date],
CASE WHEN DATEDIFF(day,convert(datetime,tPS.[Accredited Service Date],126),convert(varchar(10),getutcdate(),126)) > 30 
then 1 else 0 end as [DOJ_30_FLag]
from tblrolecoreskillpeoplsoft tRCPS 
join tblheadcountPeoplesoft tPS 
on tRCPS.[Employee ID]=tPS.[Employee ID]
left outer join tblCostCentreSLTRegionMapping TCCM
on LTRIM(RTRIM(tPS.[Global Cost Centre]))=LTRIM(RTRIM(TCCM.[Khalix Symbol]))
where tPS.[Employee ID] is not null and tPS.[Employee ID]>0
and LTRIM(RTRIM(ISNULL(TCCM.[Business Hierarchy Level 4],''))) not in ('CR','DES','Risk Solutions',' ','')
and lower(LTRIM(RTRIM(tPS.[Active/ InActive])))='active' 
and lower(LTRIM(RTRIM(tRCPS.[Status])))='active'
GO
/****** Object:  View [dbo].[vPeople_CRF_Vacancies]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vPeople_CRF_Vacancies] AS
SELECT 
       T1.[Job_Opening_ID]
      ,T1.[Posting_Title]
      ,T1.[Vacancy_Status]    
      ,T1.[Hiring_Manager]  
      ,T1.[Country]  
      ,T1.[Cost_Centre]
      ,Convert(varchar(10),T1.[Opened_Date],126) as [Opened_Date],
	  TCCM.[Business Hierarchy Level 4] as SLT,
      TCCM.[Region],
	  CASE WHEN Convert(varchar(10),T1.[Opened_Date],126) <= Convert(varchar(10),DATEADD(month,-3,getutcdate()),126)
	  then 'Compliant' else 'Non Compliant' end as [Compliance Status]
      FROM [tblVacancies] T1 
	   left outer join tblCostCentreSLTRegionMapping TCCM on 
  ltrim(rtrim(T1.[Cost_Centre]))=ltrim(rtrim(TCCM.[Khalix Symbol]))
  Where LTRIM(RTRIM(ISNULL(TCCM.[Business Hierarchy Level 4],''))) 
  not in ('CR','DES','Risk Solutions',' ','') 
  and ltrim(rtrim(T1.[Vacancy_Status])) like '%open'
GO
/****** Object:  View [dbo].[vProvisionMapping]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
Create view [dbo].[vProvisionMapping] as 
Select ProvisionId,[Provision Name] From tblProvisionMapping;
GO
/****** Object:  View [dbo].[vTOHRTable]    Script Date: 08-09-2017 16:13:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vTOHRTable] as 
 select CAST(TOHR.[Issue ID] as int) as [Issue ID]
      ,TOHR.[Issue Type]
      ,TOHR.[Issue Status]
      ,TOHR.[Impact Rating]
      ,TOHR.[Executive Responsible]
      ,TOHR.[Issue Owner Name (Issue)]
      ,Convert(varchar(10),TOHR.[Target Completion Date (Issue)],126) as [Target Completion Date (Issue)]
      ,Convert(varchar(10),TOHR.[Revised Target Completion Date (Issue)],126) as [Revised Target Completion Date (Issue)] 
      ,TOHR.[flgClosedPendReview]
      ,CAST(TOHR.[count_ext_due_date_change] as int) as count_ext_due_date_change
     ,TOHR.[Material Risk]
      ,TOHR.[SLT]
      ,TOHR.[Region],convert(varchar(10),getutcdate(),126) as CurrentDate
      from tohrtable TOHR
	  where LTRIM(RTRIM(ISNULL(TOHR.[SLT],''))) 
 not in ('CR','DES','Risk Solutions',' ','')
 and TOHR.[Material Risk] in (select Name from MCRT..tblMaterialRisks 
 Where Isnull(IsActive,0)=1)
GO
